//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

internal class Generic_ResourcesExternionsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("ResourcesExternions");
		L.RegFunction("Load0T", Load0T);
		L.RegFunction("FindObjectsOfTypeAll0T", FindObjectsOfTypeAll0T);
		L.RegFunction("LoadAsync0T", LoadAsync0T);
		L.RegFunction("LoadAll0T", LoadAll0T);
		L.RegFunction("GetBuiltinResource0T", GetBuiltinResource0T);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load0T(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			System.Type arg1 = ToLua.CheckMonoType(L, 2);
			var o = Generic.ResourcesExternions.Load0T(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindObjectsOfTypeAll0T(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Type arg0 = ToLua.CheckMonoType(L, 1);
			var o = Generic.ResourcesExternions.FindObjectsOfTypeAll0T(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsync0T(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			System.Type arg1 = ToLua.CheckMonoType(L, 2);
			var o = Generic.ResourcesExternions.LoadAsync0T(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAll0T(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			System.Type arg1 = ToLua.CheckMonoType(L, 2);
			var o = Generic.ResourcesExternions.LoadAll0T(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBuiltinResource0T(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			System.Type arg1 = ToLua.CheckMonoType(L, 2);
			var o = Generic.ResourcesExternions.GetBuiltinResource0T(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

