//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

internal class UnityEngine_ComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Component), typeof(UnityEngine.Object));
		L.RegFunction("GetComponent", GetComponent);
		L.RegFunction("GetComponent0", GetComponent0);
		L.RegFunction("GetComponent1", GetComponent1);
		L.RegFunction("GetComponentInChildren", GetComponentInChildren);
		L.RegFunction("GetComponentInChildren0", GetComponentInChildren0);
		L.RegFunction("GetComponentInChildren1", GetComponentInChildren1);
		L.RegFunction("GetComponentsInChildren", GetComponentsInChildren);
		L.RegFunction("GetComponentsInChildren0", GetComponentsInChildren0);
		L.RegFunction("GetComponentsInChildren1", GetComponentsInChildren1);
		L.RegFunction("GetComponentInParent", GetComponentInParent);
		L.RegFunction("GetComponentsInParent", GetComponentsInParent);
		L.RegFunction("GetComponentsInParent0", GetComponentsInParent0);
		L.RegFunction("GetComponentsInParent1", GetComponentsInParent1);
		L.RegFunction("GetComponents", GetComponents);
		L.RegFunction("GetComponents0", GetComponents0);
		L.RegFunction("GetComponents1", GetComponents1);
		L.RegFunction("CompareTag", CompareTag);
		L.RegFunction("SendMessageUpwards", SendMessageUpwards);
		L.RegFunction("SendMessageUpwards0", SendMessageUpwards0);
		L.RegFunction("SendMessageUpwards1", SendMessageUpwards1);
		L.RegFunction("SendMessageUpwards2", SendMessageUpwards2);
		L.RegFunction("SendMessageUpwards3", SendMessageUpwards3);
		L.RegFunction("SendMessage", SendMessage);
		L.RegFunction("SendMessage0", SendMessage0);
		L.RegFunction("SendMessage1", SendMessage1);
		L.RegFunction("SendMessage2", SendMessage2);
		L.RegFunction("SendMessage3", SendMessage3);
		L.RegFunction("BroadcastMessage", BroadcastMessage);
		L.RegFunction("BroadcastMessage0", BroadcastMessage0);
		L.RegFunction("BroadcastMessage1", BroadcastMessage1);
		L.RegFunction("BroadcastMessage2", BroadcastMessage2);
		L.RegFunction("BroadcastMessage3", BroadcastMessage3);
		L.RegFunction("New", _CreateUnityEngine_Component);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("transform", get_transform, null);
		L.RegFunction("gettransform", get_transform);
		L.RegVar("gameObject", get_gameObject, null);
		L.RegFunction("getgameObject", get_gameObject);
		L.RegVar("tag", get_tag, set_tag);
		L.RegFunction("gettag", get_tag);
		L.RegFunction("settag", set_tag);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Component(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				var obj = new UnityEngine.Component();
				ToLua.Push(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Component.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				return GetComponent0(L);
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				return GetComponent1(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.GetComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponent0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			var o = obj.GetComponent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponent1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			var o = obj.GetComponent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return GetComponentInChildren0(L);
			}
			else if (count == 3)
			{
				return GetComponentInChildren1(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.GetComponentInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInChildren0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			var o = obj.GetComponentInChildren(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInChildren1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			bool arg1 = LuaDLL.lua_toboolean(L, 3);
			var o = obj.GetComponentInChildren(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return GetComponentsInChildren0(L);
			}
			else if (count == 3)
			{
				return GetComponentsInChildren1(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.GetComponentsInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInChildren0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			var o = obj.GetComponentsInChildren(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInChildren1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			bool arg1 = LuaDLL.lua_toboolean(L, 3);
			var o = obj.GetComponentsInChildren(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInParent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			var obj = (UnityEngine.Component)ToLua.CheckObject<UnityEngine.Component>(L, 1);
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			var o = obj.GetComponentInParent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInParent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return GetComponentsInParent0(L);
			}
			else if (count == 3)
			{
				return GetComponentsInParent1(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.GetComponentsInParent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInParent0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			var o = obj.GetComponentsInParent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInParent1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			bool arg1 = LuaDLL.lua_toboolean(L, 3);
			var o = obj.GetComponentsInParent(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponents(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return GetComponents0(L);
			}
			else if (count == 3)
			{
				return GetComponents1(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.GetComponents");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponents0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			var o = obj.GetComponents(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponents1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
			System.Collections.Generic.List<UnityEngine.Component> arg1 = (System.Collections.Generic.List<UnityEngine.Component>)ToLua.ToObject(L, 3);
			obj.GetComponents(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CompareTag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			var obj = (UnityEngine.Component)ToLua.CheckObject<UnityEngine.Component>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			var o = obj.CompareTag(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageUpwards(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return SendMessageUpwards0(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<uint>(L, 3))
			{
				return SendMessageUpwards1(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<object>(L, 3))
			{
				return SendMessageUpwards2(L);
			}
			else if (count == 4)
			{
				return SendMessageUpwards3(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.SendMessageUpwards");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageUpwards0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			obj.SendMessageUpwards(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageUpwards1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			UnityEngine.SendMessageOptions arg1 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 3);
			obj.SendMessageUpwards(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageUpwards2(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.SendMessageUpwards(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageUpwards3(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			UnityEngine.SendMessageOptions arg2 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 4);
			obj.SendMessageUpwards(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return SendMessage0(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<uint>(L, 3))
			{
				return SendMessage1(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<object>(L, 3))
			{
				return SendMessage2(L);
			}
			else if (count == 4)
			{
				return SendMessage3(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.SendMessage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			obj.SendMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			UnityEngine.SendMessageOptions arg1 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 3);
			obj.SendMessage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage2(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.SendMessage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage3(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			UnityEngine.SendMessageOptions arg2 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 4);
			obj.SendMessage(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BroadcastMessage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				return BroadcastMessage0(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<uint>(L, 3))
			{
				return BroadcastMessage1(L);
			}
			else if (count == 3 && TypeChecker.CheckTypes<object>(L, 3))
			{
				return BroadcastMessage2(L);
			}
			else if (count == 4)
			{
				return BroadcastMessage3(L);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Component.BroadcastMessage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BroadcastMessage0(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			obj.BroadcastMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BroadcastMessage1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			UnityEngine.SendMessageOptions arg1 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 3);
			obj.BroadcastMessage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BroadcastMessage2(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.BroadcastMessage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BroadcastMessage3(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			var obj = (UnityEngine.Component)ToLua.ToObject(L, 1);
			string arg0 = ToLua.ToString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			UnityEngine.SendMessageOptions arg2 = (UnityEngine.SendMessageOptions)LuaDLL.lua_tonumber(L, 4);
			obj.BroadcastMessage(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Component obj = (UnityEngine.Component)o;
			UnityEngine.Transform ret = obj.transform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Component obj = (UnityEngine.Component)o;
			UnityEngine.GameObject ret = obj.gameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Component obj = (UnityEngine.Component)o;
			string ret = obj.tag;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Component obj = (UnityEngine.Component)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.tag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tag on a nil value");
		}
	}
}

