-- Generated by CSharp.lua Compiler
local System = System
local UnityEngine = UnityEngine
System.namespace("CSLua", function (namespace)
  namespace.class("TestCoroutine", function (namespace)
    local Awake, OnTick, Test
    Awake = function (this)
      UnityEngine.Debug.Log0("TestCoroutine")
      this._iter = OnTick(this)
      this._coroutine = MonoManager.getInstance():StartCoroutine1(this._iter)
    end
    OnTick = function (this)
      return System.yieldIEnumerator(function (this)
        local count = 0
        while true do
          System.yieldReturn(UnityEngine.WaitForSeconds(1))
          UnityEngine.Debug.Log0("TestCoroutine.OnTick")
          local default = count
          count = default + 1
          if default > 10 then
            UnityEngine.Debug.Log0("TestCoroutine Stop!")
            --MonoManager.Instance.StopCoroutine(_coroutine);
            MonoManager.getInstance():StopCoroutine0(this._iter)
          end
        end
      end, System.Object, this)
    end
    Test = function (this)
      UnityEngine.Debug.Log0("TestCoroutine.Test")
    end
    return {
      Awake = Awake,
      Test = Test
    }
  end)
end)
