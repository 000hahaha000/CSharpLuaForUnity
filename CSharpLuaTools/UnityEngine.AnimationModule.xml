<?xml version="1.0" encoding="utf-8" ?>
<meta>
	<assembly>
		<namespace name="UnityEngine">
			<class name="Animator">
				<method name="GetFloat" GenericArgCount="0" Template="{this}:GetFloat0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetFloat" GenericArgCount="0" Template="{this}:GetFloat1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat2({0}, {1}, {2}, {3})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat3({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="GetBool" GenericArgCount="0" Template="{this}:GetBool0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetBool" GenericArgCount="0" Template="{this}:GetBool1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetBool" GenericArgCount="0" Template="{this}:SetBool0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="SetBool" GenericArgCount="0" Template="{this}:SetBool1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetInteger" GenericArgCount="0" Template="{this}:GetInteger0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetInteger" GenericArgCount="0" Template="{this}:GetInteger1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetInteger" GenericArgCount="0" Template="{this}:SetInteger0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetInteger" GenericArgCount="0" Template="{this}:SetInteger1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetTrigger" GenericArgCount="0" Template="{this}:SetTrigger0({0})">
					<arg type="System.String"/>
				</method>
				<method name="SetTrigger" GenericArgCount="0" Template="{this}:SetTrigger1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="ResetTrigger" GenericArgCount="0" Template="{this}:ResetTrigger0({0})">
					<arg type="System.String"/>
				</method>
				<method name="ResetTrigger" GenericArgCount="0" Template="{this}:ResetTrigger1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="IsParameterControlledByCurve" GenericArgCount="0" Template="{this}:IsParameterControlledByCurve0({0})">
					<arg type="System.String"/>
				</method>
				<method name="IsParameterControlledByCurve" GenericArgCount="0" Template="{this}:IsParameterControlledByCurve1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetIKPosition" GenericArgCount="0" Template="{this}:GetIKPosition({0})">
					<arg type="UnityEngine.AvatarIKGoal"/>
				</method>
				<method name="SetIKPosition" GenericArgCount="0" Template="{this}:SetIKPosition({0}, {1})">
					<arg type="UnityEngine.AvatarIKGoal"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="GetIKRotation" GenericArgCount="0" Template="{this}:GetIKRotation({0})">
					<arg type="UnityEngine.AvatarIKGoal"/>
				</method>
				<method name="SetIKRotation" GenericArgCount="0" Template="{this}:SetIKRotation({0}, {1})">
					<arg type="UnityEngine.AvatarIKGoal"/>
					<arg type="UnityEngine.Quaternion"/>
				</method>
				<method name="GetIKPositionWeight" GenericArgCount="0" Template="{this}:GetIKPositionWeight({0})">
					<arg type="UnityEngine.AvatarIKGoal"/>
				</method>
				<method name="SetIKPositionWeight" GenericArgCount="0" Template="{this}:SetIKPositionWeight({0}, {1})">
					<arg type="UnityEngine.AvatarIKGoal"/>
					<arg type="System.Single"/>
				</method>
				<method name="GetIKRotationWeight" GenericArgCount="0" Template="{this}:GetIKRotationWeight({0})">
					<arg type="UnityEngine.AvatarIKGoal"/>
				</method>
				<method name="SetIKRotationWeight" GenericArgCount="0" Template="{this}:SetIKRotationWeight({0}, {1})">
					<arg type="UnityEngine.AvatarIKGoal"/>
					<arg type="System.Single"/>
				</method>
				<method name="GetIKHintPosition" GenericArgCount="0" Template="{this}:GetIKHintPosition({0})">
					<arg type="UnityEngine.AvatarIKHint"/>
				</method>
				<method name="SetIKHintPosition" GenericArgCount="0" Template="{this}:SetIKHintPosition({0}, {1})">
					<arg type="UnityEngine.AvatarIKHint"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="GetIKHintPositionWeight" GenericArgCount="0" Template="{this}:GetIKHintPositionWeight({0})">
					<arg type="UnityEngine.AvatarIKHint"/>
				</method>
				<method name="SetIKHintPositionWeight" GenericArgCount="0" Template="{this}:SetIKHintPositionWeight({0}, {1})">
					<arg type="UnityEngine.AvatarIKHint"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetLookAtPosition" GenericArgCount="0" Template="{this}:SetLookAtPosition({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="SetLookAtWeight" GenericArgCount="0" Template="{this}:SetLookAtWeight0({0})">
					<arg type="System.Single"/>
				</method>
				<method name="SetLookAtWeight" GenericArgCount="0" Template="{this}:SetLookAtWeight1({0}, {1})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetLookAtWeight" GenericArgCount="0" Template="{this}:SetLookAtWeight2({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetLookAtWeight" GenericArgCount="0" Template="{this}:SetLookAtWeight3({0}, {1}, {2}, {3})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetLookAtWeight" GenericArgCount="0" Template="{this}:SetLookAtWeight4({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetBoneLocalRotation" GenericArgCount="0" Template="{this}:SetBoneLocalRotation({0}, {1})">
					<arg type="UnityEngine.HumanBodyBones"/>
					<arg type="UnityEngine.Quaternion"/>
				</method>
				<method name="GetBehaviour" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.AnimatorExternions.GetBehaviour(this UnityEngine.Animator self, System.Type T)">
				</method>
				<method name="GetBehaviours" GenericArgCount="0" Template="{this}:GetBehaviours({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetBehaviours" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.AnimatorExternions.GetBehaviours0T(this UnityEngine.Animator self, System.Type T)">
				</method>
				<method name="GetLayerName" GenericArgCount="0" Template="{this}:GetLayerName({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetLayerIndex" GenericArgCount="0" Template="{this}:GetLayerIndex({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetLayerWeight" GenericArgCount="0" Template="{this}:GetLayerWeight({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetLayerWeight" GenericArgCount="0" Template="{this}:SetLayerWeight({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="GetCurrentAnimatorStateInfo" GenericArgCount="0" Template="{this}:GetCurrentAnimatorStateInfo({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetNextAnimatorStateInfo" GenericArgCount="0" Template="{this}:GetNextAnimatorStateInfo({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetAnimatorTransitionInfo" GenericArgCount="0" Template="{this}:GetAnimatorTransitionInfo({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetCurrentAnimatorClipInfoCount" GenericArgCount="0" Template="{this}:GetCurrentAnimatorClipInfoCount({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetCurrentAnimatorClipInfo" GenericArgCount="0" Template="{this}:GetCurrentAnimatorClipInfo0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetCurrentAnimatorClipInfo" GenericArgCount="0" Template="{this}:GetCurrentAnimatorClipInfo1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.AnimatorClipInfo"/>
					</arg>
				</method>
				<method name="GetNextAnimatorClipInfoCount" GenericArgCount="0" Template="{this}:GetNextAnimatorClipInfoCount({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetNextAnimatorClipInfo" GenericArgCount="0" Template="{this}:GetNextAnimatorClipInfo0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetNextAnimatorClipInfo" GenericArgCount="0" Template="{this}:GetNextAnimatorClipInfo1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.AnimatorClipInfo"/>
					</arg>
				</method>
				<method name="IsInTransition" GenericArgCount="0" Template="{this}:IsInTransition({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetParameter" GenericArgCount="0" Template="{this}:GetParameter({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="MatchTarget" GenericArgCount="0" Template="{this}:MatchTarget0({0}, {1}, {2}, {3}, {4})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
					<arg type="UnityEngine.AvatarTarget"/>
					<arg type="UnityEngine.MatchTargetWeightMask"/>
					<arg type="System.Single"/>
				</method>
				<method name="MatchTarget" GenericArgCount="0" Template="{this}:MatchTarget1({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
					<arg type="UnityEngine.AvatarTarget"/>
					<arg type="UnityEngine.MatchTargetWeightMask"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="InterruptMatchTarget" GenericArgCount="0" Template="{this}:InterruptMatchTarget0()">
				</method>
				<method name="InterruptMatchTarget" GenericArgCount="0" Template="{this}:InterruptMatchTarget1({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime0({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime3({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime4({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime5({0}, {1}, {2}, {3})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime6({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeInFixedTime" GenericArgCount="0" Template="{this}:CrossFadeInFixedTime7({0}, {1}, {2}, {3}, {4})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade0({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade3({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade4({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade5({0}, {1}, {2}, {3})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade6({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade7({0}, {1}, {2}, {3}, {4})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime0({0})">
					<arg type="System.String"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime4({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="PlayInFixedTime" GenericArgCount="0" Template="{this}:PlayInFixedTime5({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play0({0})">
					<arg type="System.String"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play4({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play5({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetTarget" GenericArgCount="0" Template="{this}:SetTarget({0}, {1})">
					<arg type="UnityEngine.AvatarTarget"/>
					<arg type="System.Single"/>
				</method>
				<method name="GetBoneTransform" GenericArgCount="0" Template="{this}:GetBoneTransform({0})">
					<arg type="UnityEngine.HumanBodyBones"/>
				</method>
				<method name="StartPlayback" GenericArgCount="0" Template="{this}:StartPlayback()">
				</method>
				<method name="StopPlayback" GenericArgCount="0" Template="{this}:StopPlayback()">
				</method>
				<method name="StartRecording" GenericArgCount="0" Template="{this}:StartRecording({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="StopRecording" GenericArgCount="0" Template="{this}:StopRecording()">
				</method>
				<method name="HasState" GenericArgCount="0" Template="{this}:HasState({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="StringToHash" GenericArgCount="0" Template="UnityEngine.Animator.StringToHash({0})">
					<arg type="System.String"/>
				</method>
				<method name="Update" GenericArgCount="0" Template="{this}:Update({0})">
					<arg type="System.Single"/>
				</method>
				<method name="Rebind" GenericArgCount="0" Template="{this}:Rebind()">
				</method>
				<method name="ApplyBuiltinRootMotion" GenericArgCount="0" Template="{this}:ApplyBuiltinRootMotion()">
				</method>
			</class>
			<class name="Animation">
				<method name="Stop" GenericArgCount="0" Template="{this}:Stop0()">
				</method>
				<method name="Stop" GenericArgCount="0" Template="{this}:Stop1({0})">
					<arg type="System.String"/>
				</method>
				<method name="Rewind" GenericArgCount="0" Template="{this}:Rewind0()">
				</method>
				<method name="Rewind" GenericArgCount="0" Template="{this}:Rewind1({0})">
					<arg type="System.String"/>
				</method>
				<method name="Sample" GenericArgCount="0" Template="{this}:Sample()">
				</method>
				<method name="IsPlaying" GenericArgCount="0" Template="{this}:IsPlaying({0})">
					<arg type="System.String"/>
				</method>
				<method name="get_Item" GenericArgCount="0" Template="{this}:get_Item({0})">
					<arg type="System.String"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play0()">
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play1({0})">
					<arg type="UnityEngine.PlayMode"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play2({0})">
					<arg type="System.String"/>
				</method>
				<method name="Play" GenericArgCount="0" Template="{this}:Play3({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.PlayMode"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade0({0})">
					<arg type="System.String"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFade" GenericArgCount="0" Template="{this}:CrossFade2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.PlayMode"/>
				</method>
				<method name="Blend" GenericArgCount="0" Template="{this}:Blend0({0})">
					<arg type="System.String"/>
				</method>
				<method name="Blend" GenericArgCount="0" Template="{this}:Blend1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="Blend" GenericArgCount="0" Template="{this}:Blend2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeQueued" GenericArgCount="0" Template="{this}:CrossFadeQueued0({0})">
					<arg type="System.String"/>
				</method>
				<method name="CrossFadeQueued" GenericArgCount="0" Template="{this}:CrossFadeQueued1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="CrossFadeQueued" GenericArgCount="0" Template="{this}:CrossFadeQueued2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.QueueMode"/>
				</method>
				<method name="CrossFadeQueued" GenericArgCount="0" Template="{this}:CrossFadeQueued3({0}, {1}, {2}, {3})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.QueueMode"/>
					<arg type="UnityEngine.PlayMode"/>
				</method>
				<method name="PlayQueued" GenericArgCount="0" Template="{this}:PlayQueued0({0})">
					<arg type="System.String"/>
				</method>
				<method name="PlayQueued" GenericArgCount="0" Template="{this}:PlayQueued1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.QueueMode"/>
				</method>
				<method name="PlayQueued" GenericArgCount="0" Template="{this}:PlayQueued2({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="UnityEngine.QueueMode"/>
					<arg type="UnityEngine.PlayMode"/>
				</method>
				<method name="AddClip" GenericArgCount="0" Template="{this}:AddClip0({0}, {1})">
					<arg type="UnityEngine.AnimationClip"/>
					<arg type="System.String"/>
				</method>
				<method name="AddClip" GenericArgCount="0" Template="{this}:AddClip1({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.AnimationClip"/>
					<arg type="System.String"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="AddClip" GenericArgCount="0" Template="{this}:AddClip2({0}, {1}, {2}, {3}, {4})">
					<arg type="UnityEngine.AnimationClip"/>
					<arg type="System.String"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="RemoveClip" GenericArgCount="0" Template="{this}:RemoveClip0({0})">
					<arg type="UnityEngine.AnimationClip"/>
				</method>
				<method name="RemoveClip" GenericArgCount="0" Template="{this}:RemoveClip1({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetClipCount" GenericArgCount="0" Template="{this}:GetClipCount()">
				</method>
				<method name="SyncLayer" GenericArgCount="0" Template="{this}:SyncLayer({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetEnumerator" GenericArgCount="0" Template="{this}:GetEnumerator()">
				</method>
				<method name="GetClip" GenericArgCount="0" Template="{this}:GetClip({0})">
					<arg type="System.String"/>
				</method>
			</class>
			<class name="AnimationClip">
				<method name="SampleAnimation" GenericArgCount="0" Template="{this}:SampleAnimation({0}, {1})">
					<arg type="UnityEngine.GameObject"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetCurve" GenericArgCount="0" Template="{this}:SetCurve({0}, {1}, {2}, {3})">
					<arg type="System.String"/>
					<arg type="System.Type"/>
					<arg type="System.String"/>
					<arg type="UnityEngine.AnimationCurve"/>
				</method>
				<method name="EnsureQuaternionContinuity" GenericArgCount="0" Template="{this}:EnsureQuaternionContinuity()">
				</method>
				<method name="ClearCurves" GenericArgCount="0" Template="{this}:ClearCurves()">
				</method>
				<method name="AddEvent" GenericArgCount="0" Template="{this}:AddEvent({0})">
					<arg type="UnityEngine.AnimationEvent"/>
				</method>
			</class>
			<class name="AnimationState">
				<method name="AddMixingTransform" GenericArgCount="0" Template="{this}:AddMixingTransform0({0})">
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="AddMixingTransform" GenericArgCount="0" Template="{this}:AddMixingTransform1({0}, {1})">
					<arg type="UnityEngine.Transform"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="RemoveMixingTransform" GenericArgCount="0" Template="{this}:RemoveMixingTransform({0})">
					<arg type="UnityEngine.Transform"/>
				</method>
			</class>
		</namespace>
		<namespace name="UnityEngine">
			<class name="AnimationEvent" Baned="true"/>
			<class name="AnimatorControllerParameter" Baned="true"/>
			<class name="AnimationClipPair" Baned="true"/>
			<class name="AnimatorOverrideController" Baned="true"/>
			<class name="AnimatorUtility" Baned="true"/>
			<class name="Avatar" Baned="true"/>
			<class name="HumanTrait" Baned="true"/>
			<class name="AvatarBuilder" Baned="true"/>
			<class name="AvatarMask" Baned="true"/>
			<class name="HumanPoseHandler" Baned="true"/>
			<class name="Motion" Baned="true"/>
			<class name="RuntimeAnimatorController" Baned="true"/>
			<class name="SharedBetweenAnimatorsAttribute" Baned="true"/>
			<class name="StateMachineBehaviour" Baned="true"/>
		</namespace>
		<namespace name="UnityEditorInternal">
			<class name="Transition" Baned="true"/>
			<class name="StateMachine" Baned="true"/>
			<class name="State" Baned="true"/>
			<class name="AnimatorController" Baned="true"/>
			<class name="BlendTree" Baned="true"/>
			<class name="AnimatorControllerLayer" Baned="true"/>
			<class name="AnimatorControllerParameter" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Playables">
			<class name="AnimationPlayableUtilities" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Animations">
			<class name="AnimationPlayableExtensions" Baned="true"/>
		</namespace>
	</assembly>
</meta>
