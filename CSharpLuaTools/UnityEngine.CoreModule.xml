<?xml version="1.0" encoding="utf-8" ?>
<meta>
	<assembly>
		<namespace name="UnityEngine">
			<class name="Component">
				<method name="GetComponent" GenericArgCount="0" Template="{this}:GetComponent0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponent" GenericArgCount="0" Template="{this}:GetComponent1({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetComponent" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentInChildren" GenericArgCount="0" Template="{this}:GetComponentInChildren0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentInChildren" GenericArgCount="0" Template="{this}:GetComponentInChildren1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentInChildren" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentInChildren0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentInChildren" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentInChildren1T({this}, {0}, System.TypeOfTolua({^0}))">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="0" Template="{this}:GetComponentsInChildren0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="0" Template="{this}:GetComponentsInChildren1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentsInChildren0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ComponentExternions.GetComponentsInChildren1T(this UnityEngine.Component self, System.Boolean includeInactive, System.Type T)">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ComponentExternions.GetComponentsInChildren2T(this UnityEngine.Component self,  results, System.Type T)">
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ComponentExternions.GetComponentsInChildren3T(this UnityEngine.Component self, System.Boolean includeInactive,  result, System.Type T)">
					<arg type="System.Boolean"/>
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponentInParent" GenericArgCount="0" Template="{this}:GetComponentInParent({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentInParent" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentInParent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentsInParent" GenericArgCount="0" Template="{this}:GetComponentsInParent0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="0" Template="{this}:GetComponentsInParent1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentsInParent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponentsInParent1T({this}, {0}, System.TypeOfTolua({^0}))">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ComponentExternions.GetComponentsInParent2T(this UnityEngine.Component self, System.Boolean includeInactive,  results, System.Type T)">
					<arg type="System.Boolean"/>
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponents" GenericArgCount="0" Template="{this}:GetComponents0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponents" GenericArgCount="0" Template="{this}:GetComponents1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Component"/>
					</arg>
				</method>
				<method name="GetComponents" GenericArgCount="1" Template="Generic.ComponentExternions.GetComponents0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponents" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ComponentExternions.GetComponents1T(this UnityEngine.Component self,  results, System.Type T)">
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="CompareTag" GenericArgCount="0" Template="{this}:CompareTag({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards0({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage0({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage0({0})">
					<arg type="System.String"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
			</class>
			<class name="Object">
				<method name="op_Equality" GenericArgCount="0" Template="UnityEngine.Object.op_Equality({0}, {1})">
					<arg type="UnityEngine.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="GetInstanceID" GenericArgCount="0" Template="{this}:GetInstanceID()">
				</method>
				<method name="GetHashCode" GenericArgCount="0" Template="{this}:GetHashCode()">
				</method>
				<method name="Equals" GenericArgCount="0" Template="{this}:Equals({0})">
					<arg type="System.Object"/>
				</method>
				<method name="Instantiate" GenericArgCount="0" Template="UnityEngine.Object.Instantiate0({0})">
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="Instantiate" GenericArgCount="1" Template="Generic.ObjectExternions.Instantiate1({0}, System.TypeOfTolua({^0}))">
					<arg type=""/>
				</method>
				<method name="Instantiate" GenericArgCount="0" Template="UnityEngine.Object.Instantiate2({0}, {1})">
					<arg type="UnityEngine.Object"/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Instantiate" GenericArgCount="1" Template="Generic.ObjectExternions.Instantiate3({0}, {1}, System.TypeOfTolua({^0}))">
					<arg type=""/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Instantiate" GenericArgCount="0" Template="UnityEngine.Object.Instantiate4({0}, {1}, {2})">
					<arg type="UnityEngine.Object"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
				</method>
				<method name="Instantiate" GenericArgCount="0" Template="UnityEngine.Object.Instantiate5({0}, {1}, {2})">
					<arg type="UnityEngine.Object"/>
					<arg type="UnityEngine.Transform"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="Instantiate" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ObjectExternions.Instantiate6( original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Type T)">
					<arg type=""/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
				</method>
				<method name="Instantiate" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.ObjectExternions.Instantiate7( original, UnityEngine.Transform parent, System.Boolean worldPositionStays, System.Type T)">
					<arg type=""/>
					<arg type="UnityEngine.Transform"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="Instantiate" GenericArgCount="0" Template="UnityEngine.Object.Instantiate8({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Object"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Instantiate" GenericArgCount="1" Template="Generic.ObjectExternions.Instantiate9({0}, {1}, {2}, {3}, System.TypeOfTolua({^0}))">
					<arg type=""/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Destroy" GenericArgCount="0" Template="UnityEngine.Object.Destroy0({0})">
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="Destroy" GenericArgCount="0" Template="UnityEngine.Object.Destroy1({0}, {1})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.Single"/>
				</method>
				<method name="DestroyImmediate" GenericArgCount="0" Template="UnityEngine.Object.DestroyImmediate0({0})">
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="DestroyImmediate" GenericArgCount="0" Template="UnityEngine.Object.DestroyImmediate1({0}, {1})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="FindObjectsOfType" GenericArgCount="0" Template="UnityEngine.Object.FindObjectsOfType({0})">
					<arg type="System.Type"/>
				</method>
				<method name="FindObjectsOfType" GenericArgCount="1" Template="Generic.ObjectExternions.FindObjectsOfType0T(System.TypeOfTolua({^0}))">
				</method>
				<method name="DontDestroyOnLoad" GenericArgCount="0" Template="UnityEngine.Object.DontDestroyOnLoad({0})">
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="FindObjectOfType" GenericArgCount="0" Template="UnityEngine.Object.FindObjectOfType({0})">
					<arg type="System.Type"/>
				</method>
				<method name="FindObjectOfType" GenericArgCount="1" Template="Generic.ObjectExternions.FindObjectOfType0T(System.TypeOfTolua({^0}))">
				</method>
				<method name="ToString" GenericArgCount="0" Template="{this}:ToString()">
				</method>
			</class>
			<class name="Transform">
				<method name="SetParent" GenericArgCount="0" Template="{this}:SetParent0({0})">
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="SetParent" GenericArgCount="0" Template="{this}:SetParent1({0}, {1})">
					<arg type="UnityEngine.Transform"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="SetPositionAndRotation" GenericArgCount="0" Template="{this}:SetPositionAndRotation({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Quaternion"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate1({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Space"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate2({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate3({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate4({0}, {1}, {2}, {3})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.Space"/>
				</method>
				<method name="Translate" GenericArgCount="0" Template="{this}:Translate5({0}, {1}, {2}, {3})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate1({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Space"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate2({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="System.Single"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate3({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate4({0}, {1}, {2})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.Space"/>
				</method>
				<method name="Rotate" GenericArgCount="0" Template="{this}:Rotate5({0}, {1}, {2}, {3})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.Space"/>
				</method>
				<method name="RotateAround" GenericArgCount="0" Template="{this}:RotateAround({0}, {1}, {2})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="System.Single"/>
				</method>
				<method name="LookAt" GenericArgCount="0" Template="{this}:LookAt0({0})">
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="LookAt" GenericArgCount="0" Template="{this}:LookAt1({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="LookAt" GenericArgCount="0" Template="{this}:LookAt2({0}, {1})">
					<arg type="UnityEngine.Transform"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="LookAt" GenericArgCount="0" Template="{this}:LookAt3({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="TransformDirection" GenericArgCount="0" Template="{this}:TransformDirection0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="TransformDirection" GenericArgCount="0" Template="{this}:TransformDirection1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="InverseTransformDirection" GenericArgCount="0" Template="{this}:InverseTransformDirection0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="InverseTransformDirection" GenericArgCount="0" Template="{this}:InverseTransformDirection1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="TransformVector" GenericArgCount="0" Template="{this}:TransformVector0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="TransformVector" GenericArgCount="0" Template="{this}:TransformVector1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="InverseTransformVector" GenericArgCount="0" Template="{this}:InverseTransformVector0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="InverseTransformVector" GenericArgCount="0" Template="{this}:InverseTransformVector1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="TransformPoint" GenericArgCount="0" Template="{this}:TransformPoint0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="TransformPoint" GenericArgCount="0" Template="{this}:TransformPoint1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="InverseTransformPoint" GenericArgCount="0" Template="{this}:InverseTransformPoint0({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="InverseTransformPoint" GenericArgCount="0" Template="{this}:InverseTransformPoint1({0}, {1}, {2})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="DetachChildren" GenericArgCount="0" Template="{this}:DetachChildren()">
				</method>
				<method name="SetAsFirstSibling" GenericArgCount="0" Template="{this}:SetAsFirstSibling()">
				</method>
				<method name="SetAsLastSibling" GenericArgCount="0" Template="{this}:SetAsLastSibling()">
				</method>
				<method name="SetSiblingIndex" GenericArgCount="0" Template="{this}:SetSiblingIndex({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetSiblingIndex" GenericArgCount="0" Template="{this}:GetSiblingIndex()">
				</method>
				<method name="Find" GenericArgCount="0" Template="{this}:Find({0})">
					<arg type="System.String"/>
				</method>
				<method name="IsChildOf" GenericArgCount="0" Template="{this}:IsChildOf({0})">
					<arg type="UnityEngine.Transform"/>
				</method>
				<method name="GetEnumerator" GenericArgCount="0" Template="{this}:GetEnumerator()">
				</method>
				<method name="GetChild" GenericArgCount="0" Template="{this}:GetChild({0})">
					<arg type="System.Int32"/>
				</method>
			</class>
			<class name="Material">
				<method name="Lerp" GenericArgCount="0" Template="{this}:Lerp({0}, {1}, {2})">
					<arg type="UnityEngine.Material"/>
					<arg type="UnityEngine.Material"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetPass" GenericArgCount="0" Template="{this}:SetPass({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="CopyPropertiesFromMaterial" GenericArgCount="0" Template="{this}:CopyPropertiesFromMaterial({0})">
					<arg type="UnityEngine.Material"/>
				</method>
				<method name="HasProperty" GenericArgCount="0" Template="{this}:HasProperty0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="HasProperty" GenericArgCount="0" Template="{this}:HasProperty1({0})">
					<arg type="System.String"/>
				</method>
				<method name="EnableKeyword" GenericArgCount="0" Template="{this}:EnableKeyword({0})">
					<arg type="System.String"/>
				</method>
				<method name="DisableKeyword" GenericArgCount="0" Template="{this}:DisableKeyword({0})">
					<arg type="System.String"/>
				</method>
				<method name="IsKeywordEnabled" GenericArgCount="0" Template="{this}:IsKeywordEnabled({0})">
					<arg type="System.String"/>
				</method>
				<method name="SetShaderPassEnabled" GenericArgCount="0" Template="{this}:SetShaderPassEnabled({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetShaderPassEnabled" GenericArgCount="0" Template="{this}:GetShaderPassEnabled({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetPassName" GenericArgCount="0" Template="{this}:GetPassName({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="FindPass" GenericArgCount="0" Template="{this}:FindPass({0})">
					<arg type="System.String"/>
				</method>
				<method name="SetOverrideTag" GenericArgCount="0" Template="{this}:SetOverrideTag({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.String"/>
				</method>
				<method name="GetTag" GenericArgCount="0" Template="{this}:GetTag0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetTag" GenericArgCount="0" Template="{this}:GetTag1({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Boolean"/>
					<arg type="System.String"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetFloat" GenericArgCount="0" Template="{this}:SetFloat1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetInt" GenericArgCount="0" Template="{this}:SetInt0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetInt" GenericArgCount="0" Template="{this}:SetInt1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetColor" GenericArgCount="0" Template="{this}:SetColor0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="SetColor" GenericArgCount="0" Template="{this}:SetColor1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="SetVector" GenericArgCount="0" Template="{this}:SetVector0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector4"/>
				</method>
				<method name="SetVector" GenericArgCount="0" Template="{this}:SetVector1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector4"/>
				</method>
				<method name="SetMatrix" GenericArgCount="0" Template="{this}:SetMatrix0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="SetMatrix" GenericArgCount="0" Template="{this}:SetMatrix1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="SetTexture" GenericArgCount="0" Template="{this}:SetTexture0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Texture"/>
				</method>
				<method name="SetTexture" GenericArgCount="0" Template="{this}:SetTexture1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Texture"/>
				</method>
				<method name="SetBuffer" GenericArgCount="0" Template="{this}:SetBuffer0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.ComputeBuffer"/>
				</method>
				<method name="SetBuffer" GenericArgCount="0" Template="{this}:SetBuffer1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.ComputeBuffer"/>
				</method>
				<method name="SetFloatArray" GenericArgCount="0" Template="{this}:SetFloatArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="SetFloatArray" GenericArgCount="0" Template="{this}:SetFloatArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="SetFloatArray" GenericArgCount="0" Template="{this}:SetFloatArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single[]"/>
				</method>
				<method name="SetFloatArray" GenericArgCount="0" Template="{this}:SetFloatArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single[]"/>
				</method>
				<method name="SetColorArray" GenericArgCount="0" Template="{this}:SetColorArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Color"/>
					</arg>
				</method>
				<method name="SetColorArray" GenericArgCount="0" Template="{this}:SetColorArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Color"/>
					</arg>
				</method>
				<method name="SetColorArray" GenericArgCount="0" Template="{this}:SetColorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Color[]"/>
				</method>
				<method name="SetColorArray" GenericArgCount="0" Template="{this}:SetColorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color[]"/>
				</method>
				<method name="SetVectorArray" GenericArgCount="0" Template="{this}:SetVectorArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="SetVectorArray" GenericArgCount="0" Template="{this}:SetVectorArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="SetVectorArray" GenericArgCount="0" Template="{this}:SetVectorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector4[]"/>
				</method>
				<method name="SetVectorArray" GenericArgCount="0" Template="{this}:SetVectorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector4[]"/>
				</method>
				<method name="SetMatrixArray" GenericArgCount="0" Template="{this}:SetMatrixArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="SetMatrixArray" GenericArgCount="0" Template="{this}:SetMatrixArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="SetMatrixArray" GenericArgCount="0" Template="{this}:SetMatrixArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Matrix4x4[]"/>
				</method>
				<method name="SetMatrixArray" GenericArgCount="0" Template="{this}:SetMatrixArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Matrix4x4[]"/>
				</method>
				<method name="GetFloat" GenericArgCount="0" Template="{this}:GetFloat0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetFloat" GenericArgCount="0" Template="{this}:GetFloat1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetInt" GenericArgCount="0" Template="{this}:GetInt0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetInt" GenericArgCount="0" Template="{this}:GetInt1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetColor" GenericArgCount="0" Template="{this}:GetColor0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetColor" GenericArgCount="0" Template="{this}:GetColor1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetVector" GenericArgCount="0" Template="{this}:GetVector0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetVector" GenericArgCount="0" Template="{this}:GetVector1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetMatrix" GenericArgCount="0" Template="{this}:GetMatrix0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetMatrix" GenericArgCount="0" Template="{this}:GetMatrix1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetTexture" GenericArgCount="0" Template="{this}:GetTexture0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetTexture" GenericArgCount="0" Template="{this}:GetTexture1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetFloatArray" GenericArgCount="0" Template="{this}:GetFloatArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetFloatArray" GenericArgCount="0" Template="{this}:GetFloatArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetFloatArray" GenericArgCount="0" Template="{this}:GetFloatArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="GetFloatArray" GenericArgCount="0" Template="{this}:GetFloatArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="GetColorArray" GenericArgCount="0" Template="{this}:GetColorArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetColorArray" GenericArgCount="0" Template="{this}:GetColorArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetColorArray" GenericArgCount="0" Template="{this}:GetColorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Color"/>
					</arg>
				</method>
				<method name="GetColorArray" GenericArgCount="0" Template="{this}:GetColorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Color"/>
					</arg>
				</method>
				<method name="GetVectorArray" GenericArgCount="0" Template="{this}:GetVectorArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetVectorArray" GenericArgCount="0" Template="{this}:GetVectorArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetVectorArray" GenericArgCount="0" Template="{this}:GetVectorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="GetVectorArray" GenericArgCount="0" Template="{this}:GetVectorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="GetMatrixArray" GenericArgCount="0" Template="{this}:GetMatrixArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetMatrixArray" GenericArgCount="0" Template="{this}:GetMatrixArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetMatrixArray" GenericArgCount="0" Template="{this}:GetMatrixArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="GetMatrixArray" GenericArgCount="0" Template="{this}:GetMatrixArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="SetTextureOffset" GenericArgCount="0" Template="{this}:SetTextureOffset0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector2"/>
				</method>
				<method name="SetTextureOffset" GenericArgCount="0" Template="{this}:SetTextureOffset1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector2"/>
				</method>
				<method name="SetTextureScale" GenericArgCount="0" Template="{this}:SetTextureScale0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector2"/>
				</method>
				<method name="SetTextureScale" GenericArgCount="0" Template="{this}:SetTextureScale1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector2"/>
				</method>
				<method name="GetTextureOffset" GenericArgCount="0" Template="{this}:GetTextureOffset0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetTextureOffset" GenericArgCount="0" Template="{this}:GetTextureOffset1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetTextureScale" GenericArgCount="0" Template="{this}:GetTextureScale0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetTextureScale" GenericArgCount="0" Template="{this}:GetTextureScale1({0})">
					<arg type="System.Int32"/>
				</method>
			</class>
			<class name="Light">
				<method name="SetLightDirty" GenericArgCount="0" Template="{this}:SetLightDirty()">
				</method>
				<method name="AddCommandBuffer" GenericArgCount="0" Template="{this}:AddCommandBuffer0({0}, {1})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
				</method>
				<method name="AddCommandBuffer" GenericArgCount="0" Template="{this}:AddCommandBuffer1({0}, {1}, {2})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
					<arg type="UnityEngine.Rendering.ShadowMapPass"/>
				</method>
				<method name="AddCommandBufferAsync" GenericArgCount="0" Template="{this}:AddCommandBufferAsync0({0}, {1}, {2})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
					<arg type="UnityEngine.Rendering.ComputeQueueType"/>
				</method>
				<method name="AddCommandBufferAsync" GenericArgCount="0" Template="{this}:AddCommandBufferAsync1({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
					<arg type="UnityEngine.Rendering.ShadowMapPass"/>
					<arg type="UnityEngine.Rendering.ComputeQueueType"/>
				</method>
				<method name="RemoveCommandBuffer" GenericArgCount="0" Template="{this}:RemoveCommandBuffer({0}, {1})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
				</method>
				<method name="RemoveCommandBuffers" GenericArgCount="0" Template="{this}:RemoveCommandBuffers({0})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
				</method>
				<method name="RemoveAllCommandBuffers" GenericArgCount="0" Template="{this}:RemoveAllCommandBuffers()">
				</method>
				<method name="GetCommandBuffers" GenericArgCount="0" Template="{this}:GetCommandBuffers({0})">
					<arg type="UnityEngine.Rendering.LightEvent"/>
				</method>
				<method name="GetLights" GenericArgCount="0" Template="UnityEngine.Light.GetLights({0}, {1})">
					<arg type="UnityEngine.LightType"/>
					<arg type="System.Int32"/>
				</method>
			</class>
			<class name="Camera">
				<method name="SetTargetBuffers" GenericArgCount="0" Template="{this}:SetTargetBuffers0({0}, {1})">
					<arg type="UnityEngine.RenderBuffer"/>
					<arg type="UnityEngine.RenderBuffer"/>
				</method>
				<method name="SetTargetBuffers" GenericArgCount="0" Template="{this}:SetTargetBuffers1({0}, {1})">
					<arg type="UnityEngine.RenderBuffer[]"/>
					<arg type="UnityEngine.RenderBuffer"/>
				</method>
				<method name="GetAllCameras" GenericArgCount="0" Template="UnityEngine.Camera.GetAllCameras({0})">
					<arg type="UnityEngine.Camera[]"/>
				</method>
				<method name="Render" GenericArgCount="0" Template="{this}:Render()">
				</method>
				<method name="RenderWithShader" GenericArgCount="0" Template="{this}:RenderWithShader({0}, {1})">
					<arg type="UnityEngine.Shader"/>
					<arg type="System.String"/>
				</method>
				<method name="RenderDontRestore" GenericArgCount="0" Template="{this}:RenderDontRestore()">
				</method>
				<method name="SetupCurrent" GenericArgCount="0" Template="UnityEngine.Camera.SetupCurrent({0})">
					<arg type="UnityEngine.Camera"/>
				</method>
				<method name="RenderToCubemap" GenericArgCount="0" Template="{this}:RenderToCubemap0({0})">
					<arg type="UnityEngine.Cubemap"/>
				</method>
				<method name="RenderToCubemap" GenericArgCount="0" Template="{this}:RenderToCubemap1({0})">
					<arg type="UnityEngine.RenderTexture"/>
				</method>
				<method name="RenderToCubemap" GenericArgCount="0" Template="{this}:RenderToCubemap2({0}, {1})">
					<arg type="UnityEngine.Cubemap"/>
					<arg type="System.Int32"/>
				</method>
				<method name="RenderToCubemap" GenericArgCount="0" Template="{this}:RenderToCubemap3({0}, {1})">
					<arg type="UnityEngine.RenderTexture"/>
					<arg type="System.Int32"/>
				</method>
				<method name="RenderToCubemap" GenericArgCount="0" Template="{this}:RenderToCubemap4({0}, {1}, {2})">
					<arg type="UnityEngine.RenderTexture"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Camera+MonoOrStereoscopicEye"/>
				</method>
				<method name="CopyFrom" GenericArgCount="0" Template="{this}:CopyFrom({0})">
					<arg type="UnityEngine.Camera"/>
				</method>
				<method name="GetCommandBuffers" GenericArgCount="0" Template="{this}:GetCommandBuffers({0})">
					<arg type="UnityEngine.Rendering.CameraEvent"/>
				</method>
				<method name="ResetTransparencySortSettings" GenericArgCount="0" Template="{this}:ResetTransparencySortSettings()">
				</method>
				<method name="ResetAspect" GenericArgCount="0" Template="{this}:ResetAspect()">
				</method>
				<method name="ResetCullingMatrix" GenericArgCount="0" Template="{this}:ResetCullingMatrix()">
				</method>
				<method name="SetReplacementShader" GenericArgCount="0" Template="{this}:SetReplacementShader({0}, {1})">
					<arg type="UnityEngine.Shader"/>
					<arg type="System.String"/>
				</method>
				<method name="ResetReplacementShader" GenericArgCount="0" Template="{this}:ResetReplacementShader()">
				</method>
				<method name="ResetWorldToCameraMatrix" GenericArgCount="0" Template="{this}:ResetWorldToCameraMatrix()">
				</method>
				<method name="ResetProjectionMatrix" GenericArgCount="0" Template="{this}:ResetProjectionMatrix()">
				</method>
				<method name="CalculateObliqueMatrix" GenericArgCount="0" Template="{this}:CalculateObliqueMatrix({0})">
					<arg type="UnityEngine.Vector4"/>
				</method>
				<method name="WorldToScreenPoint" GenericArgCount="0" Template="{this}:WorldToScreenPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="WorldToViewportPoint" GenericArgCount="0" Template="{this}:WorldToViewportPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ViewportToWorldPoint" GenericArgCount="0" Template="{this}:ViewportToWorldPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ScreenToWorldPoint" GenericArgCount="0" Template="{this}:ScreenToWorldPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ScreenToViewportPoint" GenericArgCount="0" Template="{this}:ScreenToViewportPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ViewportToScreenPoint" GenericArgCount="0" Template="{this}:ViewportToScreenPoint({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ViewportPointToRay" GenericArgCount="0" Template="{this}:ViewportPointToRay({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="ScreenPointToRay" GenericArgCount="0" Template="{this}:ScreenPointToRay({0})">
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="CalculateFrustumCorners" GenericArgCount="0" Template="{this}:CalculateFrustumCorners({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Rect"/>
					<arg type="System.Single"/>
					<arg type="UnityEngine.Camera+MonoOrStereoscopicEye"/>
					<arg type="UnityEngine.Vector3[]"/>
				</method>
				<method name="GetStereoNonJitteredProjectionMatrix" GenericArgCount="0" Template="{this}:GetStereoNonJitteredProjectionMatrix({0})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
				</method>
				<method name="GetStereoViewMatrix" GenericArgCount="0" Template="{this}:GetStereoViewMatrix({0})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
				</method>
				<method name="CopyStereoDeviceProjectionMatrixToNonJittered" GenericArgCount="0" Template="{this}:CopyStereoDeviceProjectionMatrixToNonJittered({0})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
				</method>
				<method name="GetStereoProjectionMatrix" GenericArgCount="0" Template="{this}:GetStereoProjectionMatrix({0})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
				</method>
				<method name="SetStereoProjectionMatrix" GenericArgCount="0" Template="{this}:SetStereoProjectionMatrix({0}, {1})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="ResetStereoProjectionMatrices" GenericArgCount="0" Template="{this}:ResetStereoProjectionMatrices()">
				</method>
				<method name="SetStereoViewMatrix" GenericArgCount="0" Template="{this}:SetStereoViewMatrix({0}, {1})">
					<arg type="UnityEngine.Camera+StereoscopicEye"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="ResetStereoViewMatrices" GenericArgCount="0" Template="{this}:ResetStereoViewMatrices()">
				</method>
				<method name="RemoveCommandBuffers" GenericArgCount="0" Template="{this}:RemoveCommandBuffers({0})">
					<arg type="UnityEngine.Rendering.CameraEvent"/>
				</method>
				<method name="RemoveAllCommandBuffers" GenericArgCount="0" Template="{this}:RemoveAllCommandBuffers()">
				</method>
				<method name="AddCommandBuffer" GenericArgCount="0" Template="{this}:AddCommandBuffer({0}, {1})">
					<arg type="UnityEngine.Rendering.CameraEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
				</method>
				<method name="AddCommandBufferAsync" GenericArgCount="0" Template="{this}:AddCommandBufferAsync({0}, {1}, {2})">
					<arg type="UnityEngine.Rendering.CameraEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
					<arg type="UnityEngine.Rendering.ComputeQueueType"/>
				</method>
				<method name="RemoveCommandBuffer" GenericArgCount="0" Template="{this}:RemoveCommandBuffer({0}, {1})">
					<arg type="UnityEngine.Rendering.CameraEvent"/>
					<arg type="UnityEngine.Rendering.CommandBuffer"/>
				</method>
			</class>
			<class name="MonoBehaviour">
				<method name="IsInvoking" GenericArgCount="0" Template="{this}:IsInvoking0()">
				</method>
				<method name="IsInvoking" GenericArgCount="0" Template="{this}:IsInvoking1({0})">
					<arg type="System.String"/>
				</method>
				<method name="CancelInvoke" GenericArgCount="0" Template="{this}:CancelInvoke0()">
				</method>
				<method name="CancelInvoke" GenericArgCount="0" Template="{this}:CancelInvoke1({0})">
					<arg type="System.String"/>
				</method>
				<method name="Invoke" GenericArgCount="0" Template="{this}:Invoke({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="InvokeRepeating" GenericArgCount="0" Template="{this}:InvokeRepeating({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="StartCoroutine" GenericArgCount="0" Baned="true" NotImplementMethod="custom baned!">
					<arg type="System.String"/>
				</method>
				<method name="StartCoroutine" GenericArgCount="0" Template="{this}:StartCoroutine1({0})">
					<arg type="System.Collections.IEnumerator"/>
				</method>
				<method name="StartCoroutine" GenericArgCount="0" Baned="true" NotImplementMethod="custom baned!">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="StopCoroutine" GenericArgCount="0" Template="{this}:StopCoroutine0({0})">
					<arg type="System.Collections.IEnumerator"/>
				</method>
				<method name="StopCoroutine" GenericArgCount="0" Template="{this}:StopCoroutine1({0})">
					<arg type="UnityEngine.Coroutine"/>
				</method>
				<method name="StopCoroutine" GenericArgCount="0" Template="{this}:StopCoroutine2({0})">
					<arg type="System.String"/>
				</method>
				<method name="StopAllCoroutines" GenericArgCount="0" Template="{this}:StopAllCoroutines()">
				</method>
				<method name="print" GenericArgCount="0" Template="UnityEngine.MonoBehaviour.print({0})">
					<arg type="System.Object"/>
				</method>
			</class>
			<class name="GameObject">
				<method name="CreatePrimitive" GenericArgCount="0" Template="UnityEngine.GameObject.CreatePrimitive({0})">
					<arg type="UnityEngine.PrimitiveType"/>
				</method>
				<method name="GetComponent" GenericArgCount="0" Template="{this}:GetComponent0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponent" GenericArgCount="0" Template="{this}:GetComponent1({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetComponent" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentInChildren" GenericArgCount="0" Template="{this}:GetComponentInChildren0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentInChildren" GenericArgCount="0" Template="{this}:GetComponentInChildren1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentInChildren" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentInChildren0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentInChildren" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentInChildren1T({this}, {0}, System.TypeOfTolua({^0}))">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentInParent" GenericArgCount="0" Template="{this}:GetComponentInParent({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentInParent" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentInParent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponents" GenericArgCount="0" Template="{this}:GetComponents0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponents" GenericArgCount="0" Template="{this}:GetComponents1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Component"/>
					</arg>
				</method>
				<method name="GetComponents" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponents0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponents" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.GameObjectExternions.GetComponents1T(this UnityEngine.GameObject self,  results, System.Type T)">
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="0" Template="{this}:GetComponentsInChildren0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="0" Template="{this}:GetComponentsInChildren1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentsInChildren0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.GameObjectExternions.GetComponentsInChildren1T(this UnityEngine.GameObject self, System.Boolean includeInactive, System.Type T)">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.GameObjectExternions.GetComponentsInChildren2T(this UnityEngine.GameObject self,  results, System.Type T)">
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponentsInChildren" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.GameObjectExternions.GetComponentsInChildren3T(this UnityEngine.GameObject self, System.Boolean includeInactive,  results, System.Type T)">
					<arg type="System.Boolean"/>
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="0" Template="{this}:GetComponentsInParent0({0})">
					<arg type="System.Type"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="0" Template="{this}:GetComponentsInParent1({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentsInParent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Template="Generic.GameObjectExternions.GetComponentsInParent1T({this}, {0}, System.TypeOfTolua({^0}))">
					<arg type="System.Boolean"/>
				</method>
				<method name="GetComponentsInParent" GenericArgCount="1" Baned="true" NotImplementMethod="Generic.GameObjectExternions.GetComponentsInParent2T(this UnityEngine.GameObject self, System.Boolean includeInactive,  results, System.Type T)">
					<arg type="System.Boolean"/>
					<arg type="System.Collections.Generic.List^1">
					</arg>
				</method>
				<method name="SetActive" GenericArgCount="0" Template="{this}:SetActive({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="CompareTag" GenericArgCount="0" Template="{this}:CompareTag({0})">
					<arg type="System.String"/>
				</method>
				<method name="FindGameObjectWithTag" GenericArgCount="0" Template="UnityEngine.GameObject.FindGameObjectWithTag({0})">
					<arg type="System.String"/>
				</method>
				<method name="FindWithTag" GenericArgCount="0" Template="UnityEngine.GameObject.FindWithTag({0})">
					<arg type="System.String"/>
				</method>
				<method name="FindGameObjectsWithTag" GenericArgCount="0" Template="UnityEngine.GameObject.FindGameObjectsWithTag({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards0({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="SendMessageUpwards" GenericArgCount="0" Template="{this}:SendMessageUpwards3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage0({0})">
					<arg type="System.String"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="SendMessage" GenericArgCount="0" Template="{this}:SendMessage3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage0({0})">
					<arg type="System.String"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage1({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
				</method>
				<method name="BroadcastMessage" GenericArgCount="0" Template="{this}:BroadcastMessage3({0}, {1}, {2})">
					<arg type="System.String"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.SendMessageOptions"/>
				</method>
				<method name="AddComponent" GenericArgCount="0" Template="{this}:AddComponent({0})">
					<arg type="System.Type"/>
				</method>
				<method name="AddComponent" GenericArgCount="1" Template="Generic.GameObjectExternions.AddComponent0T({this}, System.TypeOfTolua({^0}))">
				</method>
				<method name="Find" GenericArgCount="0" Template="UnityEngine.GameObject.Find({0})">
					<arg type="System.String"/>
				</method>
			</class>
			<class name="TrackedReference">
				<method name="op_Equality" GenericArgCount="0" Template="UnityEngine.TrackedReference.op_Equality({0}, {1})">
					<arg type="UnityEngine.TrackedReference"/>
					<arg type="UnityEngine.TrackedReference"/>
				</method>
				<method name="Equals" GenericArgCount="0" Template="{this}:Equals({0})">
					<arg type="System.Object"/>
				</method>
				<method name="GetHashCode" GenericArgCount="0" Template="{this}:GetHashCode()">
				</method>
			</class>
			<class name="Application">
				<method name="Quit" GenericArgCount="0" Template="UnityEngine.Application.Quit()">
				</method>
				<method name="Unload" GenericArgCount="0" Template="UnityEngine.Application.Unload()">
				</method>
				<method name="GetStreamProgressForLevel" GenericArgCount="0" Template="UnityEngine.Application.GetStreamProgressForLevel0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetStreamProgressForLevel" GenericArgCount="0" Template="UnityEngine.Application.GetStreamProgressForLevel1({0})">
					<arg type="System.String"/>
				</method>
				<method name="CanStreamedLevelBeLoaded" GenericArgCount="0" Template="UnityEngine.Application.CanStreamedLevelBeLoaded0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="CanStreamedLevelBeLoaded" GenericArgCount="0" Template="UnityEngine.Application.CanStreamedLevelBeLoaded1({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetBuildTags" GenericArgCount="0" Template="UnityEngine.Application.GetBuildTags()">
				</method>
				<method name="SetBuildTags" GenericArgCount="0" Template="UnityEngine.Application.SetBuildTags({0})">
					<arg type="System.String[]"/>
				</method>
				<method name="HasProLicense" GenericArgCount="0" Template="UnityEngine.Application.HasProLicense()">
				</method>
				<method name="RequestAdvertisingIdentifierAsync" GenericArgCount="0" Template="UnityEngine.Application.RequestAdvertisingIdentifierAsync({0})">
					<arg type="UnityEngine.Application+AdvertisingIdentifierCallback"/>
				</method>
				<method name="OpenURL" GenericArgCount="0" Template="UnityEngine.Application.OpenURL({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetStackTraceLogType" GenericArgCount="0" Template="UnityEngine.Application.GetStackTraceLogType({0})">
					<arg type="UnityEngine.LogType"/>
				</method>
				<method name="SetStackTraceLogType" GenericArgCount="0" Template="UnityEngine.Application.SetStackTraceLogType({0}, {1})">
					<arg type="UnityEngine.LogType"/>
					<arg type="UnityEngine.StackTraceLogType"/>
				</method>
				<method name="RequestUserAuthorization" GenericArgCount="0" Template="UnityEngine.Application.RequestUserAuthorization({0})">
					<arg type="UnityEngine.UserAuthorization"/>
				</method>
				<method name="HasUserAuthorization" GenericArgCount="0" Template="UnityEngine.Application.HasUserAuthorization({0})">
					<arg type="UnityEngine.UserAuthorization"/>
				</method>
			</class>
			<class name="Texture">
				<method name="IncrementUpdateCount" GenericArgCount="0" Template="{this}:IncrementUpdateCount()">
				</method>
				<method name="SetGlobalAnisotropicFilteringLimits" GenericArgCount="0" Template="UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetNativeTexturePtr" GenericArgCount="0" Template="{this}:GetNativeTexturePtr()">
				</method>
			</class>
			<class name="Texture2D">
				<method name="UpdateExternalTexture" GenericArgCount="0" Template="{this}:UpdateExternalTexture({0})">
					<arg type="System.IntPtr"/>
				</method>
				<method name="SetPixels32" GenericArgCount="0" Template="{this}:SetPixels320({0})">
					<arg type="UnityEngine.Color32[]"/>
				</method>
				<method name="SetPixels32" GenericArgCount="0" Template="{this}:SetPixels321({0}, {1})">
					<arg type="UnityEngine.Color32[]"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetPixels32" GenericArgCount="0" Template="{this}:SetPixels322({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color32[]"/>
				</method>
				<method name="SetPixels32" GenericArgCount="0" Template="{this}:SetPixels323({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color32[]"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetRawTextureData" GenericArgCount="0" Template="{this}:GetRawTextureData()">
				</method>
				<method name="GetPixels" GenericArgCount="0" Template="{this}:GetPixels0()">
				</method>
				<method name="GetPixels" GenericArgCount="0" Template="{this}:GetPixels1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetPixels" GenericArgCount="0" Template="{this}:GetPixels2({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetPixels" GenericArgCount="0" Template="{this}:GetPixels3({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetPixels32" GenericArgCount="0" Template="{this}:GetPixels320()">
				</method>
				<method name="GetPixels32" GenericArgCount="0" Template="{this}:GetPixels321({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="Resize" GenericArgCount="0" Template="{this}:Resize0({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="Resize" GenericArgCount="0" Template="{this}:Resize1({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.TextureFormat"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="PackTextures" GenericArgCount="0" Template="{this}:PackTextures0({0}, {1})">
					<arg type="UnityEngine.Texture2D[]"/>
					<arg type="System.Int32"/>
				</method>
				<method name="PackTextures" GenericArgCount="0" Template="{this}:PackTextures1({0}, {1}, {2})">
					<arg type="UnityEngine.Texture2D[]"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="PackTextures" GenericArgCount="0" Template="{this}:PackTextures2({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Texture2D[]"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GenerateAtlas" GenericArgCount="0" Template="UnityEngine.Texture2D.GenerateAtlas({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Vector2[]"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Rect"/>
					</arg>
				</method>
				<method name="ReadPixels" GenericArgCount="0" Template="{this}:ReadPixels0({0}, {1}, {2})">
					<arg type="UnityEngine.Rect"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="ReadPixels" GenericArgCount="0" Template="{this}:ReadPixels1({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Rect"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="Compress" GenericArgCount="0" Template="{this}:Compress({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="CreateExternalTexture" GenericArgCount="0" Template="UnityEngine.Texture2D.CreateExternalTexture({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.TextureFormat"/>
					<arg type="System.Boolean"/>
					<arg type="System.Boolean"/>
					<arg type="System.IntPtr"/>
				</method>
				<method name="SetPixel" GenericArgCount="0" Template="{this}:SetPixel({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="SetPixels" GenericArgCount="0" Template="{this}:SetPixels0({0})">
					<arg type="UnityEngine.Color[]"/>
				</method>
				<method name="SetPixels" GenericArgCount="0" Template="{this}:SetPixels1({0}, {1})">
					<arg type="UnityEngine.Color[]"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetPixels" GenericArgCount="0" Template="{this}:SetPixels2({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color[]"/>
				</method>
				<method name="SetPixels" GenericArgCount="0" Template="{this}:SetPixels3({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color[]"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetPixel" GenericArgCount="0" Template="{this}:GetPixel({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetPixelBilinear" GenericArgCount="0" Template="{this}:GetPixelBilinear({0}, {1})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="LoadRawTextureData" GenericArgCount="0" Template="{this}:LoadRawTextureData0({0})">
					<arg type="System.Byte[]"/>
				</method>
				<method name="LoadRawTextureData" GenericArgCount="0" Template="{this}:LoadRawTextureData1({0}, {1})">
					<arg type="System.IntPtr"/>
					<arg type="System.Int32"/>
				</method>
				<method name="Apply" GenericArgCount="0" Template="{this}:Apply0()">
				</method>
				<method name="Apply" GenericArgCount="0" Template="{this}:Apply1({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="Apply" GenericArgCount="0" Template="{this}:Apply2({0}, {1})">
					<arg type="System.Boolean"/>
					<arg type="System.Boolean"/>
				</method>
			</class>
			<class name="Shader">
				<method name="PropertyToID" GenericArgCount="0" Template="UnityEngine.Shader.PropertyToID({0})">
					<arg type="System.String"/>
				</method>
				<method name="Find" GenericArgCount="0" Template="UnityEngine.Shader.Find({0})">
					<arg type="System.String"/>
				</method>
				<method name="EnableKeyword" GenericArgCount="0" Template="UnityEngine.Shader.EnableKeyword({0})">
					<arg type="System.String"/>
				</method>
				<method name="DisableKeyword" GenericArgCount="0" Template="UnityEngine.Shader.DisableKeyword({0})">
					<arg type="System.String"/>
				</method>
				<method name="IsKeywordEnabled" GenericArgCount="0" Template="UnityEngine.Shader.IsKeywordEnabled({0})">
					<arg type="System.String"/>
				</method>
				<method name="WarmupAllShaders" GenericArgCount="0" Template="UnityEngine.Shader.WarmupAllShaders()">
				</method>
				<method name="SetGlobalFloat" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloat0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetGlobalFloat" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloat1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetGlobalInt" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalInt0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetGlobalInt" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalInt1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetGlobalVector" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVector0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector4"/>
				</method>
				<method name="SetGlobalVector" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVector1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector4"/>
				</method>
				<method name="SetGlobalColor" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalColor0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="SetGlobalColor" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalColor1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="SetGlobalMatrix" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrix0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="SetGlobalMatrix" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrix1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Matrix4x4"/>
				</method>
				<method name="SetGlobalTexture" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalTexture0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Texture"/>
				</method>
				<method name="SetGlobalTexture" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalTexture1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Texture"/>
				</method>
				<method name="SetGlobalBuffer" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalBuffer0({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.ComputeBuffer"/>
				</method>
				<method name="SetGlobalBuffer" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalBuffer1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.ComputeBuffer"/>
				</method>
				<method name="SetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloatArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="SetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloatArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="SetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloatArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Single[]"/>
				</method>
				<method name="SetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalFloatArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single[]"/>
				</method>
				<method name="SetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVectorArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="SetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVectorArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="SetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVectorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Vector4[]"/>
				</method>
				<method name="SetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalVectorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Vector4[]"/>
				</method>
				<method name="SetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrixArray0({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="SetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrixArray1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="SetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrixArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.Matrix4x4[]"/>
				</method>
				<method name="SetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.SetGlobalMatrixArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Matrix4x4[]"/>
				</method>
				<method name="GetGlobalFloat" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloat0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalFloat" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloat1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalInt" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalInt0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalInt" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalInt1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalVector" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVector0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalVector" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVector1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalColor" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalColor0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalColor" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalColor1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalMatrix" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrix0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalMatrix" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrix1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalTexture" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalTexture0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalTexture" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalTexture1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloatArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloatArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloatArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="GetGlobalFloatArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalFloatArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="System.Single"/>
					</arg>
				</method>
				<method name="GetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVectorArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVectorArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVectorArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="GetGlobalVectorArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalVectorArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Vector4"/>
					</arg>
				</method>
				<method name="GetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrixArray0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrixArray1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrixArray2({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
				<method name="GetGlobalMatrixArray" GenericArgCount="0" Template="UnityEngine.Shader.GetGlobalMatrixArray3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Matrix4x4"/>
					</arg>
				</method>
			</class>
			<class name="Renderer">
				<method name="HasPropertyBlock" GenericArgCount="0" Template="{this}:HasPropertyBlock()">
				</method>
				<method name="SetPropertyBlock" GenericArgCount="0" Template="{this}:SetPropertyBlock0({0})">
					<arg type="UnityEngine.MaterialPropertyBlock"/>
				</method>
				<method name="SetPropertyBlock" GenericArgCount="0" Template="{this}:SetPropertyBlock1({0}, {1})">
					<arg type="UnityEngine.MaterialPropertyBlock"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetPropertyBlock" GenericArgCount="0" Template="{this}:GetPropertyBlock0({0})">
					<arg type="UnityEngine.MaterialPropertyBlock"/>
				</method>
				<method name="GetPropertyBlock" GenericArgCount="0" Template="{this}:GetPropertyBlock1({0}, {1})">
					<arg type="UnityEngine.MaterialPropertyBlock"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetClosestReflectionProbes" GenericArgCount="0" Template="{this}:GetClosestReflectionProbes({0})">
					<arg type="System.Collections.Generic.List^1">
						<arg type="UnityEngine.Rendering.ReflectionProbeBlendInfo"/>
					</arg>
				</method>
			</class>
			<class name="Screen">
				<method name="SetResolution" GenericArgCount="0" Template="UnityEngine.Screen.SetResolution0({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.FullScreenMode"/>
				</method>
				<method name="SetResolution" GenericArgCount="0" Template="UnityEngine.Screen.SetResolution1({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="SetResolution" GenericArgCount="0" Template="UnityEngine.Screen.SetResolution2({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.FullScreenMode"/>
					<arg type="System.Int32"/>
				</method>
				<method name="SetResolution" GenericArgCount="0" Template="UnityEngine.Screen.SetResolution3({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
					<arg type="System.Int32"/>
				</method>
			</class>
			<class name="Random">
				<method name="InitState" GenericArgCount="0" Template="UnityEngine.Random.InitState({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="Range" GenericArgCount="0" Template="UnityEngine.Random.Range0({0}, {1})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="Range" GenericArgCount="0" Template="UnityEngine.Random.Range1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="ColorHSV" GenericArgCount="0" Template="UnityEngine.Random.ColorHSV0()">
				</method>
				<method name="ColorHSV" GenericArgCount="0" Template="UnityEngine.Random.ColorHSV1({0}, {1})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="ColorHSV" GenericArgCount="0" Template="UnityEngine.Random.ColorHSV2({0}, {1}, {2}, {3})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="ColorHSV" GenericArgCount="0" Template="UnityEngine.Random.ColorHSV3({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="ColorHSV" GenericArgCount="0" Template="UnityEngine.Random.ColorHSV4({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7})">
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
			</class>
			<class name="Input">
				<method name="GetAxis" GenericArgCount="0" Template="UnityEngine.Input.GetAxis({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetAxisRaw" GenericArgCount="0" Template="UnityEngine.Input.GetAxisRaw({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetButton" GenericArgCount="0" Template="UnityEngine.Input.GetButton({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetButtonDown" GenericArgCount="0" Template="UnityEngine.Input.GetButtonDown({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetButtonUp" GenericArgCount="0" Template="UnityEngine.Input.GetButtonUp({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetKey" GenericArgCount="0" Template="UnityEngine.Input.GetKey0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetKey" GenericArgCount="0" Template="UnityEngine.Input.GetKey1({0})">
					<arg type="UnityEngine.KeyCode"/>
				</method>
				<method name="GetKeyDown" GenericArgCount="0" Template="UnityEngine.Input.GetKeyDown0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetKeyDown" GenericArgCount="0" Template="UnityEngine.Input.GetKeyDown1({0})">
					<arg type="UnityEngine.KeyCode"/>
				</method>
				<method name="GetKeyUp" GenericArgCount="0" Template="UnityEngine.Input.GetKeyUp0({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetKeyUp" GenericArgCount="0" Template="UnityEngine.Input.GetKeyUp1({0})">
					<arg type="UnityEngine.KeyCode"/>
				</method>
				<method name="GetJoystickNames" GenericArgCount="0" Template="UnityEngine.Input.GetJoystickNames()">
				</method>
				<method name="GetMouseButton" GenericArgCount="0" Template="UnityEngine.Input.GetMouseButton({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetMouseButtonDown" GenericArgCount="0" Template="UnityEngine.Input.GetMouseButtonDown({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetMouseButtonUp" GenericArgCount="0" Template="UnityEngine.Input.GetMouseButtonUp({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="ResetInputAxes" GenericArgCount="0" Template="UnityEngine.Input.ResetInputAxes()">
				</method>
				<method name="GetAccelerationEvent" GenericArgCount="0" Template="UnityEngine.Input.GetAccelerationEvent({0})">
					<arg type="System.Int32"/>
				</method>
			</class>
			<class name="SkinnedMeshRenderer">
				<method name="GetBlendShapeWeight" GenericArgCount="0" Template="{this}:GetBlendShapeWeight({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetBlendShapeWeight" GenericArgCount="0" Template="{this}:SetBlendShapeWeight({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Single"/>
				</method>
				<method name="BakeMesh" GenericArgCount="0" Template="{this}:BakeMesh({0})">
					<arg type="UnityEngine.Mesh"/>
				</method>
			</class>
			<class name="QualitySettings">
				<method name="IncreaseLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.IncreaseLevel0()">
				</method>
				<method name="IncreaseLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.IncreaseLevel1({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="DecreaseLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.DecreaseLevel0()">
				</method>
				<method name="DecreaseLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.DecreaseLevel1({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="SetQualityLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.SetQualityLevel0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetQualityLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.SetQualityLevel1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="GetQualityLevel" GenericArgCount="0" Template="UnityEngine.QualitySettings.GetQualityLevel()">
				</method>
			</class>
			<class name="RenderTexture">
				<method name="ReleaseTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.ReleaseTemporary({0})">
					<arg type="UnityEngine.RenderTexture"/>
				</method>
				<method name="ResolveAntiAliasedSurface" GenericArgCount="0" Template="{this}:ResolveAntiAliasedSurface0()">
				</method>
				<method name="ResolveAntiAliasedSurface" GenericArgCount="0" Template="{this}:ResolveAntiAliasedSurface1({0})">
					<arg type="UnityEngine.RenderTexture"/>
				</method>
				<method name="DiscardContents" GenericArgCount="0" Template="{this}:DiscardContents0()">
				</method>
				<method name="DiscardContents" GenericArgCount="0" Template="{this}:DiscardContents1({0}, {1})">
					<arg type="System.Boolean"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="MarkRestoreExpected" GenericArgCount="0" Template="{this}:MarkRestoreExpected()">
				</method>
				<method name="GetNativeDepthBufferPtr" GenericArgCount="0" Template="{this}:GetNativeDepthBufferPtr()">
				</method>
				<method name="SetGlobalShaderProperty" GenericArgCount="0" Template="{this}:SetGlobalShaderProperty({0})">
					<arg type="System.String"/>
				</method>
				<method name="SupportsStencil" GenericArgCount="0" Template="UnityEngine.RenderTexture.SupportsStencil({0})">
					<arg type="UnityEngine.RenderTexture"/>
				</method>
				<method name="Create" GenericArgCount="0" Template="{this}:Create()">
				</method>
				<method name="Release" GenericArgCount="0" Template="{this}:Release()">
				</method>
				<method name="IsCreated" GenericArgCount="0" Template="{this}:IsCreated()">
				</method>
				<method name="GenerateMips" GenericArgCount="0" Template="{this}:GenerateMips()">
				</method>
				<method name="ConvertToEquirect" GenericArgCount="0" Template="{this}:ConvertToEquirect({0}, {1})">
					<arg type="UnityEngine.RenderTexture"/>
					<arg type="UnityEngine.Camera+MonoOrStereoscopicEye"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary0({0})">
					<arg type="UnityEngine.RenderTextureDescriptor"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary1({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary2({0}, {1}, {2})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary3({0}, {1}, {2}, {3})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary4({0}, {1}, {2}, {3}, {4})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
					<arg type="UnityEngine.RenderTextureReadWrite"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary5({0}, {1}, {2}, {3}, {4}, {5})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
					<arg type="UnityEngine.RenderTextureReadWrite"/>
					<arg type="System.Int32"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary6({0}, {1}, {2}, {3}, {4}, {5}, {6})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
					<arg type="UnityEngine.RenderTextureReadWrite"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureMemoryless"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary7({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
					<arg type="UnityEngine.RenderTextureReadWrite"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureMemoryless"/>
					<arg type="UnityEngine.VRTextureUsage"/>
				</method>
				<method name="GetTemporary" GenericArgCount="0" Template="UnityEngine.RenderTexture.GetTemporary8({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8})">
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureFormat"/>
					<arg type="UnityEngine.RenderTextureReadWrite"/>
					<arg type="System.Int32"/>
					<arg type="UnityEngine.RenderTextureMemoryless"/>
					<arg type="UnityEngine.VRTextureUsage"/>
					<arg type="System.Boolean"/>
				</method>
			</class>
			<class name="Resources">
				<method name="FindObjectsOfTypeAll" GenericArgCount="0" Template="UnityEngine.Resources.FindObjectsOfTypeAll({0})">
					<arg type="System.Type"/>
				</method>
				<method name="FindObjectsOfTypeAll" GenericArgCount="1" Template="Generic.ResourcesExternions.FindObjectsOfTypeAll0T(System.TypeOfTolua({^0}))">
				</method>
				<method name="Load" GenericArgCount="0" Template="UnityEngine.Resources.Load0({0})">
					<arg type="System.String"/>
				</method>
				<method name="Load" GenericArgCount="0" Template="UnityEngine.Resources.Load1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Type"/>
				</method>
				<method name="Load" GenericArgCount="1" Template="Generic.ResourcesExternions.Load0T({0}, System.TypeOfTolua({^0}))">
					<arg type="System.String"/>
				</method>
				<method name="LoadAsync" GenericArgCount="0" Template="UnityEngine.Resources.LoadAsync0({0})">
					<arg type="System.String"/>
				</method>
				<method name="LoadAsync" GenericArgCount="0" Template="UnityEngine.Resources.LoadAsync1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Type"/>
				</method>
				<method name="LoadAsync" GenericArgCount="1" Template="Generic.ResourcesExternions.LoadAsync0T({0}, System.TypeOfTolua({^0}))">
					<arg type="System.String"/>
				</method>
				<method name="LoadAll" GenericArgCount="0" Template="UnityEngine.Resources.LoadAll0({0})">
					<arg type="System.String"/>
				</method>
				<method name="LoadAll" GenericArgCount="0" Template="UnityEngine.Resources.LoadAll1({0}, {1})">
					<arg type="System.String"/>
					<arg type="System.Type"/>
				</method>
				<method name="LoadAll" GenericArgCount="1" Template="Generic.ResourcesExternions.LoadAll0T({0}, System.TypeOfTolua({^0}))">
					<arg type="System.String"/>
				</method>
				<method name="GetBuiltinResource" GenericArgCount="0" Template="UnityEngine.Resources.GetBuiltinResource({0}, {1})">
					<arg type="System.Type"/>
					<arg type="System.String"/>
				</method>
				<method name="GetBuiltinResource" GenericArgCount="1" Template="Generic.ResourcesExternions.GetBuiltinResource0T({0}, System.TypeOfTolua({^0}))">
					<arg type="System.String"/>
				</method>
				<method name="UnloadAsset" GenericArgCount="0" Template="UnityEngine.Resources.UnloadAsset({0})">
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="UnloadUnusedAssets" GenericArgCount="0" Template="UnityEngine.Resources.UnloadUnusedAssets()">
				</method>
			</class>
			<class name="TextAsset">
				<method name="ToString" GenericArgCount="0" Template="{this}:ToString()">
				</method>
			</class>
			<class name="Debug">
				<method name="DrawLine" GenericArgCount="0" Template="UnityEngine.Debug.DrawLine0({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="DrawLine" GenericArgCount="0" Template="UnityEngine.Debug.DrawLine1({0}, {1}, {2})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="DrawLine" GenericArgCount="0" Template="UnityEngine.Debug.DrawLine2({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
					<arg type="System.Single"/>
				</method>
				<method name="DrawLine" GenericArgCount="0" Template="UnityEngine.Debug.DrawLine3({0}, {1}, {2}, {3}, {4})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
					<arg type="System.Single"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="DrawRay" GenericArgCount="0" Template="UnityEngine.Debug.DrawRay0({0}, {1})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
				</method>
				<method name="DrawRay" GenericArgCount="0" Template="UnityEngine.Debug.DrawRay1({0}, {1}, {2})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
				</method>
				<method name="DrawRay" GenericArgCount="0" Template="UnityEngine.Debug.DrawRay2({0}, {1}, {2}, {3})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
					<arg type="System.Single"/>
				</method>
				<method name="DrawRay" GenericArgCount="0" Template="UnityEngine.Debug.DrawRay3({0}, {1}, {2}, {3}, {4})">
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Vector3"/>
					<arg type="UnityEngine.Color"/>
					<arg type="System.Single"/>
					<arg type="System.Boolean"/>
				</method>
				<method name="Break" GenericArgCount="0" Template="UnityEngine.Debug.Break()">
				</method>
				<method name="DebugBreak" GenericArgCount="0" Template="UnityEngine.Debug.DebugBreak()">
				</method>
				<method name="Log" GenericArgCount="0" Template="UnityEngine.Debug.Log0({0})">
					<arg type="System.Object"/>
				</method>
				<method name="Log" GenericArgCount="0" Template="UnityEngine.Debug.Log1({0}, {1})">
					<arg type="System.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="LogFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogFormat0({0}, {1}, {*2})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogFormat1({0}, {*1})">
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogError" GenericArgCount="0" Template="UnityEngine.Debug.LogError0({0})">
					<arg type="System.Object"/>
				</method>
				<method name="LogError" GenericArgCount="0" Template="UnityEngine.Debug.LogError1({0}, {1})">
					<arg type="System.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="LogErrorFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogErrorFormat0({0}, {1}, {*2})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogErrorFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogErrorFormat1({0}, {*1})">
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="ClearDeveloperConsole" GenericArgCount="0" Template="UnityEngine.Debug.ClearDeveloperConsole()">
				</method>
				<method name="LogException" GenericArgCount="0" Template="UnityEngine.Debug.LogException0({0})">
					<arg type="System.Exception"/>
				</method>
				<method name="LogException" GenericArgCount="0" Template="UnityEngine.Debug.LogException1({0}, {1})">
					<arg type="System.Exception"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="LogWarning" GenericArgCount="0" Template="UnityEngine.Debug.LogWarning0({0})">
					<arg type="System.Object"/>
				</method>
				<method name="LogWarning" GenericArgCount="0" Template="UnityEngine.Debug.LogWarning1({0}, {1})">
					<arg type="System.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="LogWarningFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogWarningFormat0({0}, {1}, {*2})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogWarningFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogWarningFormat1({0}, {*1})">
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert0({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert1({0}, {1})">
					<arg type="System.Boolean"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert2({0}, {1})">
					<arg type="System.Boolean"/>
					<arg type="System.String"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert3({0}, {1})">
					<arg type="System.Boolean"/>
					<arg type="System.Object"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert4({0}, {1}, {2})">
					<arg type="System.Boolean"/>
					<arg type="System.String"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="Assert" GenericArgCount="0" Template="UnityEngine.Debug.Assert5({0}, {1}, {2})">
					<arg type="System.Boolean"/>
					<arg type="System.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="AssertFormat" GenericArgCount="0" Template="UnityEngine.Debug.AssertFormat0({0}, {1}, {2}, {*3})">
					<arg type="System.Boolean"/>
					<arg type="UnityEngine.Object"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="AssertFormat" GenericArgCount="0" Template="UnityEngine.Debug.AssertFormat1({0}, {1}, {*2})">
					<arg type="System.Boolean"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogAssertion" GenericArgCount="0" Template="UnityEngine.Debug.LogAssertion0({0})">
					<arg type="System.Object"/>
				</method>
				<method name="LogAssertion" GenericArgCount="0" Template="UnityEngine.Debug.LogAssertion1({0}, {1})">
					<arg type="System.Object"/>
					<arg type="UnityEngine.Object"/>
				</method>
				<method name="LogAssertionFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogAssertionFormat0({0}, {1}, {*2})">
					<arg type="UnityEngine.Object"/>
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
				<method name="LogAssertionFormat" GenericArgCount="0" Template="UnityEngine.Debug.LogAssertionFormat1({0}, {*1})">
					<arg type="System.String"/>
					<arg type="System.Object[]"/>
				</method>
			</class>
			<class name="SystemInfo">
				<method name="SupportsRenderTextureFormat" GenericArgCount="0" Template="UnityEngine.SystemInfo.SupportsRenderTextureFormat({0})">
					<arg type="UnityEngine.RenderTextureFormat"/>
				</method>
				<method name="SupportsBlendingOnRenderTextureFormat" GenericArgCount="0" Template="UnityEngine.SystemInfo.SupportsBlendingOnRenderTextureFormat({0})">
					<arg type="UnityEngine.RenderTextureFormat"/>
				</method>
				<method name="SupportsTextureFormat" GenericArgCount="0" Template="UnityEngine.SystemInfo.SupportsTextureFormat({0})">
					<arg type="UnityEngine.TextureFormat"/>
				</method>
			</class>
			<class name="RectTransform">
				<method name="GetLocalCorners" GenericArgCount="0" Template="{this}:GetLocalCorners1({0})">
					<arg type="UnityEngine.Vector3[]"/>
				</method>
				<method name="GetWorldCorners" GenericArgCount="0" Template="{this}:GetWorldCorners1({0})">
					<arg type="UnityEngine.Vector3[]"/>
				</method>
				<method name="SetInsetAndSizeFromParentEdge" GenericArgCount="0" Template="{this}:SetInsetAndSizeFromParentEdge({0}, {1}, {2})">
					<arg type="UnityEngine.RectTransform+Edge"/>
					<arg type="System.Single"/>
					<arg type="System.Single"/>
				</method>
				<method name="SetSizeWithCurrentAnchors" GenericArgCount="0" Template="{this}:SetSizeWithCurrentAnchors({0}, {1})">
					<arg type="UnityEngine.RectTransform+Axis"/>
					<arg type="System.Single"/>
				</method>
				<method name="ForceUpdateRectTransforms" GenericArgCount="0" Template="{this}:ForceUpdateRectTransforms()">
				</method>
			</class>
		</namespace>
		<namespace name="UnityEngine.SceneManagement">
			<class name="SceneManager">
				<method name="GetActiveScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.GetActiveScene()">
				</method>
				<method name="SetActiveScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.SetActiveScene({0})">
					<arg type="UnityEngine.SceneManagement.Scene"/>
				</method>
				<method name="GetSceneByPath" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.GetSceneByPath({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetSceneByName" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.GetSceneByName({0})">
					<arg type="System.String"/>
				</method>
				<method name="GetSceneByBuildIndex" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.GetSceneByBuildIndex({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetSceneAt" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.GetSceneAt({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="LoadScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadScene0({0})">
					<arg type="System.String"/>
				</method>
				<method name="LoadScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadScene1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="LoadScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadScene2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SceneManagement.LoadSceneMode"/>
				</method>
				<method name="LoadScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadScene3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.SceneManagement.LoadSceneMode"/>
				</method>
				<method name="LoadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadSceneAsync0({0})">
					<arg type="System.String"/>
				</method>
				<method name="LoadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadSceneAsync1({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="LoadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadSceneAsync2({0}, {1})">
					<arg type="System.String"/>
					<arg type="UnityEngine.SceneManagement.LoadSceneMode"/>
				</method>
				<method name="LoadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.LoadSceneAsync3({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.SceneManagement.LoadSceneMode"/>
				</method>
				<method name="CreateScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.CreateScene({0})">
					<arg type="System.String"/>
				</method>
				<method name="UnloadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync0({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="UnloadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync1({0})">
					<arg type="System.String"/>
				</method>
				<method name="UnloadSceneAsync" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync2({0})">
					<arg type="UnityEngine.SceneManagement.Scene"/>
				</method>
				<method name="MergeScenes" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.MergeScenes({0}, {1})">
					<arg type="UnityEngine.SceneManagement.Scene"/>
					<arg type="UnityEngine.SceneManagement.Scene"/>
				</method>
				<method name="MoveGameObjectToScene" GenericArgCount="0" Template="UnityEngine.SceneManagement.SceneManager.MoveGameObjectToScene({0}, {1})">
					<arg type="UnityEngine.GameObject"/>
					<arg type="UnityEngine.SceneManagement.Scene"/>
				</method>
			</class>
		</namespace>
		<namespace name="UnityEngine.Events">
			<class name="UnityEvent">
				<method name="AddListener" GenericArgCount="0" Template="{this}:AddListener({0})">
					<arg type="UnityEngine.Events.UnityAction"/>
				</method>
				<method name="RemoveListener" GenericArgCount="0" Template="{this}:RemoveListener({0})">
					<arg type="UnityEngine.Events.UnityAction"/>
				</method>
				<method name="Invoke" GenericArgCount="0" Template="{this}:Invoke()">
				</method>
			</class>
			<class name="UnityEventBase">
				<method name="GetPersistentEventCount" GenericArgCount="0" Template="{this}:GetPersistentEventCount()">
				</method>
				<method name="GetPersistentTarget" GenericArgCount="0" Template="{this}:GetPersistentTarget({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="GetPersistentMethodName" GenericArgCount="0" Template="{this}:GetPersistentMethodName({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="SetPersistentListenerState" GenericArgCount="0" Template="{this}:SetPersistentListenerState({0}, {1})">
					<arg type="System.Int32"/>
					<arg type="UnityEngine.Events.UnityEventCallState"/>
				</method>
				<method name="RemoveAllListeners" GenericArgCount="0" Template="{this}:RemoveAllListeners()">
				</method>
				<method name="ToString" GenericArgCount="0" Template="{this}:ToString()">
				</method>
				<method name="GetValidMethodInfo" GenericArgCount="0" Template="UnityEngine.Events.UnityEventBase.GetValidMethodInfo({0}, {1}, {2})">
					<arg type="System.Object"/>
					<arg type="System.String"/>
					<arg type="System.Type[]"/>
				</method>
			</class>
			<class name="UnityEvent`1">
				<method name="AddListener" GenericArgCount="0" Template="{this}:AddListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.Int32"/>
					</arg>
				</method>
				<method name="RemoveListener" GenericArgCount="0" Template="{this}:RemoveListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.Int32"/>
					</arg>
				</method>
				<method name="Invoke" GenericArgCount="0" Template="{this}:Invoke({0})">
					<arg type="System.Int32"/>
				</method>
				<method name="AddListener" GenericArgCount="0" Template="{this}:AddListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.Boolean"/>
					</arg>
				</method>
				<method name="RemoveListener" GenericArgCount="0" Template="{this}:RemoveListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.Boolean"/>
					</arg>
				</method>
				<method name="Invoke" GenericArgCount="0" Template="{this}:Invoke({0})">
					<arg type="System.Boolean"/>
				</method>
				<method name="AddListener" GenericArgCount="0" Template="{this}:AddListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.String"/>
					</arg>
				</method>
				<method name="RemoveListener" GenericArgCount="0" Template="{this}:RemoveListener({0})">
					<arg type="UnityEngine.Events.UnityAction^1">
						<arg type="System.String"/>
					</arg>
				</method>
				<method name="Invoke" GenericArgCount="0" Template="{this}:Invoke({0})">
					<arg type="System.String"/>
				</method>
			</class>
		</namespace>
		<namespace name="UnityEngine">
			<class name="AndroidInput" Baned="true"/>
			<class name="AndroidJavaObject" Baned="true"/>
			<class name="AndroidJavaClass" Baned="true"/>
			<class name="AndroidJNIHelper" Baned="true"/>
			<class name="AndroidJNI" Baned="true"/>
			<class name="BillboardAsset" Baned="true"/>
			<class name="BillboardRenderer" Baned="true"/>
			<class name="Caching" Baned="true"/>
			<class name="ColorUtility" Baned="true"/>
			<class name="ComputeShader" Baned="true"/>
			<class name="ComputeBuffer" Baned="true"/>
			<class name="CrashReport" Baned="true"/>
			<class name="CullingGroup" Baned="true"/>
			<class name="Cursor" Baned="true"/>
			<class name="Display" Baned="true"/>
			<class name="EventProvider" Baned="true"/>
			<class name="FlareLayer" Baned="true"/>
			<class name="Gizmos" Baned="true"/>
			<class name="Gradient" Baned="true"/>
			<class name="RendererExtensions" Baned="true"/>
			<class name="Graphics" Baned="true"/>
			<class name="LightProbes" Baned="true"/>
			<class name="LightmapSettings" Baned="true"/>
			<class name="RectOffset" Baned="true"/>
			<class name="GUIElement" Baned="true"/>
			<class name="GUITexture" Baned="true"/>
			<class name="GUILayer" Baned="true"/>
			<class name="Handheld" Baned="true"/>
			<class name="TouchScreenKeyboard" Baned="true"/>
			<class name="Gyroscope" Baned="true"/>
			<class name="LocationService" Baned="true"/>
			<class name="Compass" Baned="true"/>
			<class name="LightProbeGroup" Baned="true"/>
			<class name="LightProbeProxyVolume" Baned="true"/>
			<class name="LineUtility" Baned="true"/>
			<class name="LODGroup" Baned="true"/>
			<class name="AnimationCurve" Baned="true"/>
			<class name="NetworkView" Baned="true"/>
			<class name="Network" Baned="true"/>
			<class name="BitStream" Baned="true"/>
			<class name="RPC" Baned="true"/>
			<class name="HostData" Baned="true"/>
			<class name="MasterServer" Baned="true"/>
			<class name="PlayerPrefsException" Baned="true"/>
			<class name="PlayerPrefs" Baned="true"/>
			<class name="ReflectionProbe" Baned="true"/>
			<class name="ResourceRequest" Baned="true"/>
			<class name="Security" Baned="true"/>
			<class name="Sprite" Baned="true"/>
			<class name="Cubemap" Baned="true"/>
			<class name="Texture3D" Baned="true"/>
			<class name="Texture2DArray" Baned="true"/>
			<class name="CubemapArray" Baned="true"/>
			<class name="SparseTexture" Baned="true"/>
			<class name="CustomRenderTexture" Baned="true"/>
			<class name="DynamicGI" Baned="true"/>
			<class name="AndroidJavaException" Baned="true"/>
			<class name="AndroidJavaProxy" Baned="true"/>
			<class name="DisallowMultipleComponent" Baned="true"/>
			<class name="RequireComponent" Baned="true"/>
			<class name="AddComponentMenu" Baned="true"/>
			<class name="CreateAssetMenuAttribute" Baned="true"/>
			<class name="ContextMenu" Baned="true"/>
			<class name="ExecuteInEditMode" Baned="true"/>
			<class name="HideInInspector" Baned="true"/>
			<class name="HelpURLAttribute" Baned="true"/>
			<class name="DefaultExecutionOrder" Baned="true"/>
			<class name="NativeClassAttribute" Baned="true"/>
			<class name="AssemblyIsEditorAssembly" Baned="true"/>
			<class name="ExcludeFromPresetAttribute" Baned="true"/>
			<class name="BeforeRenderOrderAttribute" Baned="true"/>
			<class name="Coroutine" Baned="true"/>
			<class name="CustomYieldInstruction" Baned="true"/>
			<class name="ExcludeFromObjectFactoryAttribute" Baned="true"/>
			<class name="GeometryUtility" Baned="true"/>
			<class name="GL" Baned="true"/>
			<class name="ScalableBufferManager" Baned="true"/>
			<class name="FrameTimingManager" Baned="true"/>
			<class name="LightmapData" Baned="true"/>
			<class name="ImageEffectTransformsToLDR" Baned="true"/>
			<class name="ImageEffectAllowedInSceneView" Baned="true"/>
			<class name="ImageEffectOpaque" Baned="true"/>
			<class name="ImageEffectAfterScale" Baned="true"/>
			<class name="Mesh" Baned="true"/>
			<class name="Projector" Baned="true"/>
			<class name="TrailRenderer" Baned="true"/>
			<class name="LineRenderer" Baned="true"/>
			<class name="MaterialPropertyBlock" Baned="true"/>
			<class name="OcclusionPortal" Baned="true"/>
			<class name="OcclusionArea" Baned="true"/>
			<class name="Flare" Baned="true"/>
			<class name="LensFlare" Baned="true"/>
			<class name="Skybox" Baned="true"/>
			<class name="MeshFilter" Baned="true"/>
			<class name="Ping" Baned="true"/>
			<class name="PropertyAttribute" Baned="true"/>
			<class name="ContextMenuItemAttribute" Baned="true"/>
			<class name="TooltipAttribute" Baned="true"/>
			<class name="SpaceAttribute" Baned="true"/>
			<class name="HeaderAttribute" Baned="true"/>
			<class name="RangeAttribute" Baned="true"/>
			<class name="MultilineAttribute" Baned="true"/>
			<class name="TextAreaAttribute" Baned="true"/>
			<class name="ColorUsageAttribute" Baned="true"/>
			<class name="DelayedAttribute" Baned="true"/>
			<class name="RuntimeInitializeOnLoadMethodAttribute" Baned="true"/>
			<class name="ScriptableObject" Baned="true"/>
			<class name="Types" Baned="true"/>
			<class name="SelectionBaseAttribute" Baned="true"/>
			<class name="SerializePrivateVariables" Baned="true"/>
			<class name="SerializeField" Baned="true"/>
			<class name="PreferBinarySerialization" Baned="true"/>
			<class name="ShaderVariantCollection" Baned="true"/>
			<class name="StackTraceUtility" Baned="true"/>
			<class name="UnityException" Baned="true"/>
			<class name="MissingComponentException" Baned="true"/>
			<class name="UnassignedReferenceException" Baned="true"/>
			<class name="MissingReferenceException" Baned="true"/>
			<class name="UnityAPICompatibilityVersionAttribute" Baned="true"/>
			<class name="UnityEventQueueSystem" Baned="true"/>
			<class name="WaitForSecondsRealtime" Baned="true"/>
			<class name="WaitUntil" Baned="true"/>
			<class name="WaitWhile" Baned="true"/>
			<class name="iPhoneSettings" Baned="true"/>
			<class name="iPhoneUtils" Baned="true"/>
			<class name="iPhoneKeyboard" Baned="true"/>
			<class name="iPhoneInput" Baned="true"/>
			<class name="iPhone" Baned="true"/>
			<class name="LocalNotification" Baned="true"/>
			<class name="RemoteNotification" Baned="true"/>
			<class name="NotificationServices" Baned="true"/>
			<class name="ADBannerView" Baned="true"/>
			<class name="ADInterstitialAd" Baned="true"/>
			<class name="Logger" Baned="true"/>
			<class name="StaticBatchingUtility" Baned="true"/>
		</namespace>
		<namespace name="UnityEditor.Experimental">
			<class name="RenderSettings" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Diagnostics">
			<class name="PlayerConnection" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Rendering">
			<class name="GraphicsSettings" Baned="true"/>
			<class name="CommandBuffer" Baned="true"/>
			<class name="SplashScreen" Baned="true"/>
			<class name="SortingGroup" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Sprites">
			<class name="DataUtility" Baned="true"/>
		</namespace>
		<namespace name="UnityEngineInternal">
			<class name="GIDebugVisualisation" Baned="true"/>
			<class name="ScriptingUtils" Baned="true"/>
			<class name="APIUpdaterRuntimeServices" Baned="true"/>
			<class name="TypeInferenceRuleAttribute" Baned="true"/>
			<class name="GenericStack" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.SceneManagement">
			<class name="SceneUtility" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Windows.Speech">
			<class name="PhraseRecognitionSystem" Baned="true"/>
			<class name="PhraseRecognizer" Baned="true"/>
			<class name="DictationRecognizer" Baned="true"/>
			<class name="KeywordRecognizer" Baned="true"/>
			<class name="GrammarRecognizer" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Windows">
			<class name="CrashReporting" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.WSA">
			<class name="Application" Baned="true"/>
			<class name="Cursor" Baned="true"/>
			<class name="Launcher" Baned="true"/>
			<class name="Tile" Baned="true"/>
			<class name="Toast" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Profiling">
			<class name="Profiler" Baned="true"/>
			<class name="Recorder" Baned="true"/>
			<class name="Sampler" Baned="true"/>
			<class name="CustomSampler" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.U2D">
			<class name="SpriteAtlasManager" Baned="true"/>
			<class name="SpriteAtlas" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Experimental.Rendering">
			<class name="AsyncGPUReadback" Baned="true"/>
			<class name="RenderPipeline" Baned="true"/>
			<class name="RenderPipelineAsset" Baned="true"/>
			<class name="RenderPipelineManager" Baned="true"/>
			<class name="SupportedRenderingFeatures" Baned="true"/>
			<class name="RenderPass" Baned="true"/>
			<class name="RenderPass.SubPass" Baned="true"/>
			<class name="RenderPassAttachment" Baned="true"/>
		</namespace>
		<namespace name="AOT">
			<class name="MonoPInvokeCallbackAttribute" Baned="true"/>
		</namespace>
		<namespace name="JetBrains.Annotations">
			<class name="CanBeNullAttribute" Baned="true"/>
			<class name="NotNullAttribute" Baned="true"/>
			<class name="StringFormatMethodAttribute" Baned="true"/>
			<class name="InvokerParameterNameAttribute" Baned="true"/>
			<class name="NotifyPropertyChangedInvocatorAttribute" Baned="true"/>
			<class name="ContractAnnotationAttribute" Baned="true"/>
			<class name="LocalizationRequiredAttribute" Baned="true"/>
			<class name="CannotApplyEqualityOperatorAttribute" Baned="true"/>
			<class name="BaseTypeRequiredAttribute" Baned="true"/>
			<class name="UsedImplicitlyAttribute" Baned="true"/>
			<class name="MeansImplicitUseAttribute" Baned="true"/>
			<class name="PublicAPIAttribute" Baned="true"/>
			<class name="InstantHandleAttribute" Baned="true"/>
			<class name="PureAttribute" Baned="true"/>
			<class name="PathReferenceAttribute" Baned="true"/>
			<class name="NoEnumerationAttribute" Baned="true"/>
			<class name="AssertionMethodAttribute" Baned="true"/>
			<class name="LinqTunnelAttribute" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Experimental.LowLevel">
			<class name="PlayerLoop" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Events">
			<class name="UnityEvent`2" Baned="true"/>
			<class name="UnityEvent`3" Baned="true"/>
			<class name="UnityEvent`4" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Assertions">
			<class name="Assert" Baned="true"/>
			<class name="AssertionException" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Assertions.Comparers">
			<class name="FloatComparer" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Assertions.Must">
			<class name="MustExtensions" Baned="true"/>
		</namespace>
		<namespace name="Unity.Burst">
			<class name="BurstDiscardAttribute" Baned="true"/>
		</namespace>
		<namespace name="Unity.Collections">
			<class name="ReadOnlyAttribute" Baned="true"/>
			<class name="WriteOnlyAttribute" Baned="true"/>
			<class name="DeallocateOnJobCompletionAttribute" Baned="true"/>
			<class name="NativeFixedLengthAttribute" Baned="true"/>
			<class name="NativeMatchesParallelForLengthAttribute" Baned="true"/>
			<class name="NativeDisableParallelForRestrictionAttribute" Baned="true"/>
			<class name="NativeLeakDetection" Baned="true"/>
			<class name="NativeSliceExtensions" Baned="true"/>
		</namespace>
		<namespace name="Unity.Collections.LowLevel.Unsafe">
			<class name="NativeContainerAttribute" Baned="true"/>
			<class name="NativeContainerIsReadOnlyAttribute" Baned="true"/>
			<class name="NativeContainerIsAtomicWriteOnlyAttribute" Baned="true"/>
			<class name="NativeContainerSupportsMinMaxWriteRestrictionAttribute" Baned="true"/>
			<class name="NativeContainerSupportsDeallocateOnJobCompletionAttribute" Baned="true"/>
			<class name="NativeContainerSupportsDeferredConvertListToArray" Baned="true"/>
			<class name="NativeSetThreadIndexAttribute" Baned="true"/>
			<class name="NativeContainerNeedsThreadIndexAttribute" Baned="true"/>
			<class name="WriteAccessRequiredAttribute" Baned="true"/>
			<class name="NativeDisableUnsafePtrRestrictionAttribute" Baned="true"/>
			<class name="NativeDisableContainerSafetyRestrictionAttribute" Baned="true"/>
			<class name="NativeSetClassTypeToNullOnScheduleAttribute" Baned="true"/>
			<class name="DisposeSentinel" Baned="true"/>
			<class name="NativeArrayUnsafeUtility" Baned="true"/>
			<class name="NativeSliceUnsafeUtility" Baned="true"/>
			<class name="UnsafeUtility" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Playables">
			<class name="PlayableAsset" Baned="true"/>
			<class name="PlayableBehaviour" Baned="true"/>
			<class name="PlayableExtensions" Baned="true"/>
			<class name="PlayableOutputExtensions" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Experimental.GlobalIllumination">
			<class name="LightmapperUtils" Baned="true"/>
			<class name="Lightmapping" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Internal">
			<class name="DefaultValueAttribute" Baned="true"/>
			<class name="ExcludeFromDocsAttribute" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.iOS">
			<class name="ADBannerView" Baned="true"/>
			<class name="ADInterstitialAd" Baned="true"/>
			<class name="Device" Baned="true"/>
			<class name="LocalNotification" Baned="true"/>
			<class name="RemoteNotification" Baned="true"/>
			<class name="NotificationServices" Baned="true"/>
			<class name="OnDemandResourcesRequest" Baned="true"/>
			<class name="OnDemandResources" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Apple.ReplayKit">
			<class name="ReplayKit" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Apple.TV">
			<class name="Remote" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Networking.PlayerConnection">
			<class name="MessageEventArgs" Baned="true"/>
			<class name="PlayerConnection" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Scripting">
			<class name="PreserveAttribute" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Scripting.APIUpdating">
			<class name="MovedFromAttribute" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Serialization">
			<class name="FormerlySerializedAsAttribute" Baned="true"/>
			<class name="UnitySurrogateSelector" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Tizen">
			<class name="Window" Baned="true"/>
		</namespace>
		<namespace name="Unity.Jobs">
			<class name="IJobExtensions" Baned="true"/>
			<class name="IJobParallelForExtensions" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Jobs">
			<class name="IJobParallelForTransformExtensions" Baned="true"/>
		</namespace>
		<namespace name="Unity.Jobs.LowLevel.Unsafe">
			<class name="JobHandleUnsafeUtility" Baned="true"/>
			<class name="JobProducerTypeAttribute" Baned="true"/>
			<class name="JobsUtility" Baned="true"/>
		</namespace>
		<namespace name="UnityEngine.Experimental.U2D">
			<class name="SpriteDataAccessExtensions" Baned="true"/>
			<class name="SpriteRendererDataAccessExtensions" Baned="true"/>
		</namespace>
	</assembly>
</meta>
